// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/enums.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LobbyType int32

const (
	LobbyType_LOBBY_TYPE_CASUAL_MATCH            LobbyType = 0
	LobbyType_LOBBY_TYPE_PRACTICE                LobbyType = 1
	LobbyType_LOBBY_TYPE_COOP_BOT_MATCH          LobbyType = 4
	LobbyType_LOBBY_TYPE_LEGACY_TEAM_MATCH       LobbyType = 5
	LobbyType_LOBBY_TYPE_LEGACY_SOLO_QUEUE_MATCH LobbyType = 6
	LobbyType_LOBBY_TYPE_COMPETITIVE_MATCH       LobbyType = 7
	LobbyType_LOBBY_TYPE_CASUAL_1V1_MATCH        LobbyType = 8
	LobbyType_LOBBY_TYPE_WEEKEND_TOURNEY         LobbyType = 9
	LobbyType_LOBBY_TYPE_LOCAL_BOT_MATCH         LobbyType = 10
	LobbyType_LOBBY_TYPE_SPECTATOR               LobbyType = 11
	LobbyType_LOBBY_TYPE_EVENT_MATCH             LobbyType = 12
)

var LobbyType_name = map[int32]string{
	0:  "LOBBY_TYPE_CASUAL_MATCH",
	1:  "LOBBY_TYPE_PRACTICE",
	4:  "LOBBY_TYPE_COOP_BOT_MATCH",
	5:  "LOBBY_TYPE_LEGACY_TEAM_MATCH",
	6:  "LOBBY_TYPE_LEGACY_SOLO_QUEUE_MATCH",
	7:  "LOBBY_TYPE_COMPETITIVE_MATCH",
	8:  "LOBBY_TYPE_CASUAL_1V1_MATCH",
	9:  "LOBBY_TYPE_WEEKEND_TOURNEY",
	10: "LOBBY_TYPE_LOCAL_BOT_MATCH",
	11: "LOBBY_TYPE_SPECTATOR",
	12: "LOBBY_TYPE_EVENT_MATCH",
}

var LobbyType_value = map[string]int32{
	"LOBBY_TYPE_CASUAL_MATCH":            0,
	"LOBBY_TYPE_PRACTICE":                1,
	"LOBBY_TYPE_COOP_BOT_MATCH":          4,
	"LOBBY_TYPE_LEGACY_TEAM_MATCH":       5,
	"LOBBY_TYPE_LEGACY_SOLO_QUEUE_MATCH": 6,
	"LOBBY_TYPE_COMPETITIVE_MATCH":       7,
	"LOBBY_TYPE_CASUAL_1V1_MATCH":        8,
	"LOBBY_TYPE_WEEKEND_TOURNEY":         9,
	"LOBBY_TYPE_LOCAL_BOT_MATCH":         10,
	"LOBBY_TYPE_SPECTATOR":               11,
	"LOBBY_TYPE_EVENT_MATCH":             12,
}

func (x LobbyType) String() string {
	return proto.EnumName(LobbyType_name, int32(x))
}

func (LobbyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{0}
}

type GameMode int32

const (
	GameMode_GAME_MODE_NONE              GameMode = 0
	GameMode_GAME_MODE_AP                GameMode = 1
	GameMode_GAME_MODE_CM                GameMode = 2
	GameMode_GAME_MODE_RD                GameMode = 3
	GameMode_GAME_MODE_SD                GameMode = 4
	GameMode_GAME_MODE_AR                GameMode = 5
	GameMode_GAME_MODE_INTRO             GameMode = 6
	GameMode_GAME_MODE_HW                GameMode = 7
	GameMode_GAME_MODE_REVERSE_CM        GameMode = 8
	GameMode_GAME_MODE_XMAS              GameMode = 9
	GameMode_GAME_MODE_TUTORIAL          GameMode = 10
	GameMode_GAME_MODE_MO                GameMode = 11
	GameMode_GAME_MODE_LP                GameMode = 12
	GameMode_GAME_MODE_POOL1             GameMode = 13
	GameMode_GAME_MODE_FH                GameMode = 14
	GameMode_GAME_MODE_CUSTOM            GameMode = 15
	GameMode_GAME_MODE_CD                GameMode = 16
	GameMode_GAME_MODE_BD                GameMode = 17
	GameMode_GAME_MODE_ABILITY_DRAFT     GameMode = 18
	GameMode_GAME_MODE_EVENT             GameMode = 19
	GameMode_GAME_MODE_ARDM              GameMode = 20
	GameMode_GAME_MODE_1V1_MID           GameMode = 21
	GameMode_GAME_MODE_ALL_DRAFT         GameMode = 22
	GameMode_GAME_MODE_TURBO             GameMode = 23
	GameMode_GAME_MODE_MUTATION          GameMode = 24
	GameMode_GAME_MODE_COACHES_CHALLENGE GameMode = 25
)

var GameMode_name = map[int32]string{
	0:  "GAME_MODE_NONE",
	1:  "GAME_MODE_AP",
	2:  "GAME_MODE_CM",
	3:  "GAME_MODE_RD",
	4:  "GAME_MODE_SD",
	5:  "GAME_MODE_AR",
	6:  "GAME_MODE_INTRO",
	7:  "GAME_MODE_HW",
	8:  "GAME_MODE_REVERSE_CM",
	9:  "GAME_MODE_XMAS",
	10: "GAME_MODE_TUTORIAL",
	11: "GAME_MODE_MO",
	12: "GAME_MODE_LP",
	13: "GAME_MODE_POOL1",
	14: "GAME_MODE_FH",
	15: "GAME_MODE_CUSTOM",
	16: "GAME_MODE_CD",
	17: "GAME_MODE_BD",
	18: "GAME_MODE_ABILITY_DRAFT",
	19: "GAME_MODE_EVENT",
	20: "GAME_MODE_ARDM",
	21: "GAME_MODE_1V1_MID",
	22: "GAME_MODE_ALL_DRAFT",
	23: "GAME_MODE_TURBO",
	24: "GAME_MODE_MUTATION",
	25: "GAME_MODE_COACHES_CHALLENGE",
}

var GameMode_value = map[string]int32{
	"GAME_MODE_NONE":              0,
	"GAME_MODE_AP":                1,
	"GAME_MODE_CM":                2,
	"GAME_MODE_RD":                3,
	"GAME_MODE_SD":                4,
	"GAME_MODE_AR":                5,
	"GAME_MODE_INTRO":             6,
	"GAME_MODE_HW":                7,
	"GAME_MODE_REVERSE_CM":        8,
	"GAME_MODE_XMAS":              9,
	"GAME_MODE_TUTORIAL":          10,
	"GAME_MODE_MO":                11,
	"GAME_MODE_LP":                12,
	"GAME_MODE_POOL1":             13,
	"GAME_MODE_FH":                14,
	"GAME_MODE_CUSTOM":            15,
	"GAME_MODE_CD":                16,
	"GAME_MODE_BD":                17,
	"GAME_MODE_ABILITY_DRAFT":     18,
	"GAME_MODE_EVENT":             19,
	"GAME_MODE_ARDM":              20,
	"GAME_MODE_1V1_MID":           21,
	"GAME_MODE_ALL_DRAFT":         22,
	"GAME_MODE_TURBO":             23,
	"GAME_MODE_MUTATION":          24,
	"GAME_MODE_COACHES_CHALLENGE": 25,
}

func (x GameMode) String() string {
	return proto.EnumName(GameMode_name, int32(x))
}

func (GameMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{1}
}

type GameState int32

const (
	GameState_GAME_STATE_INIT                     GameState = 0
	GameState_GAME_STATE_WAIT_FOR_PLAYERS_TO_LOAD GameState = 1
	GameState_GAME_STATE_HERO_SELECTION           GameState = 2
	GameState_GAME_STATE_STRATEGY_TIME            GameState = 3
	GameState_GAME_STATE_PRE_GAME                 GameState = 4
	GameState_GAME_STATE_GAME_IN_PROGRESS         GameState = 5
	GameState_GAME_STATE_POST_GAME                GameState = 6
	GameState_GAME_STATE_DISCONNECT               GameState = 7
	GameState_GAME_STATE_TEAM_SHOWCASE            GameState = 8
	GameState_GAME_STATE_CUSTOM_GAME_SETUP        GameState = 9
	GameState_GAME_STATE_WAIT_FOR_MAP_TO_LOAD     GameState = 10
	GameState_GAME_STATE_LAST                     GameState = 11
)

var GameState_name = map[int32]string{
	0:  "GAME_STATE_INIT",
	1:  "GAME_STATE_WAIT_FOR_PLAYERS_TO_LOAD",
	2:  "GAME_STATE_HERO_SELECTION",
	3:  "GAME_STATE_STRATEGY_TIME",
	4:  "GAME_STATE_PRE_GAME",
	5:  "GAME_STATE_GAME_IN_PROGRESS",
	6:  "GAME_STATE_POST_GAME",
	7:  "GAME_STATE_DISCONNECT",
	8:  "GAME_STATE_TEAM_SHOWCASE",
	9:  "GAME_STATE_CUSTOM_GAME_SETUP",
	10: "GAME_STATE_WAIT_FOR_MAP_TO_LOAD",
	11: "GAME_STATE_LAST",
}

var GameState_value = map[string]int32{
	"GAME_STATE_INIT":                     0,
	"GAME_STATE_WAIT_FOR_PLAYERS_TO_LOAD": 1,
	"GAME_STATE_HERO_SELECTION":           2,
	"GAME_STATE_STRATEGY_TIME":            3,
	"GAME_STATE_PRE_GAME":                 4,
	"GAME_STATE_GAME_IN_PROGRESS":         5,
	"GAME_STATE_POST_GAME":                6,
	"GAME_STATE_DISCONNECT":               7,
	"GAME_STATE_TEAM_SHOWCASE":            8,
	"GAME_STATE_CUSTOM_GAME_SETUP":        9,
	"GAME_STATE_WAIT_FOR_MAP_TO_LOAD":     10,
	"GAME_STATE_LAST":                     11,
}

func (x GameState) String() string {
	return proto.EnumName(GameState_name, int32(x))
}

func (GameState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{2}
}

type GameTeam int32

const (
	GameTeam_GAME_TEAM_UNKNOWN  GameTeam = 0
	GameTeam_GAME_TEAM_GOODGUYS GameTeam = 2
	GameTeam_GAME_TEAM_BADGUYS  GameTeam = 3
	GameTeam_GAME_TEAM_NEUTRALS GameTeam = 4
	GameTeam_GAME_TEAM_NOTEAM   GameTeam = 5
	GameTeam_GAME_TEAM_CUSTOM1  GameTeam = 6
	GameTeam_GAME_TEAM_CUSTOM2  GameTeam = 7
	GameTeam_GAME_TEAM_CUSTOM3  GameTeam = 8
	GameTeam_GAME_TEAM_CUSTOM4  GameTeam = 9
	GameTeam_GAME_TEAM_CUSTOM5  GameTeam = 10
	GameTeam_GAME_TEAM_CUSTOM6  GameTeam = 11
	GameTeam_GAME_TEAM_CUSTOM7  GameTeam = 12
	GameTeam_GAME_TEAM_CUSTOM8  GameTeam = 13
)

var GameTeam_name = map[int32]string{
	0:  "GAME_TEAM_UNKNOWN",
	2:  "GAME_TEAM_GOODGUYS",
	3:  "GAME_TEAM_BADGUYS",
	4:  "GAME_TEAM_NEUTRALS",
	5:  "GAME_TEAM_NOTEAM",
	6:  "GAME_TEAM_CUSTOM1",
	7:  "GAME_TEAM_CUSTOM2",
	8:  "GAME_TEAM_CUSTOM3",
	9:  "GAME_TEAM_CUSTOM4",
	10: "GAME_TEAM_CUSTOM5",
	11: "GAME_TEAM_CUSTOM6",
	12: "GAME_TEAM_CUSTOM7",
	13: "GAME_TEAM_CUSTOM8",
}

var GameTeam_value = map[string]int32{
	"GAME_TEAM_UNKNOWN":  0,
	"GAME_TEAM_GOODGUYS": 2,
	"GAME_TEAM_BADGUYS":  3,
	"GAME_TEAM_NEUTRALS": 4,
	"GAME_TEAM_NOTEAM":   5,
	"GAME_TEAM_CUSTOM1":  6,
	"GAME_TEAM_CUSTOM2":  7,
	"GAME_TEAM_CUSTOM3":  8,
	"GAME_TEAM_CUSTOM4":  9,
	"GAME_TEAM_CUSTOM5":  10,
	"GAME_TEAM_CUSTOM6":  11,
	"GAME_TEAM_CUSTOM7":  12,
	"GAME_TEAM_CUSTOM8":  13,
}

func (x GameTeam) String() string {
	return proto.EnumName(GameTeam_name, int32(x))
}

func (GameTeam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{3}
}

type BuildingType int32

const (
	BuildingType_BUILDING_TYPE_TOWER    BuildingType = 0
	BuildingType_BUILDING_TYPE_BARRACKS BuildingType = 1
	BuildingType_BUILDING_TYPE_ANCIENT  BuildingType = 2
)

var BuildingType_name = map[int32]string{
	0: "BUILDING_TYPE_TOWER",
	1: "BUILDING_TYPE_BARRACKS",
	2: "BUILDING_TYPE_ANCIENT",
}

var BuildingType_value = map[string]int32{
	"BUILDING_TYPE_TOWER":    0,
	"BUILDING_TYPE_BARRACKS": 1,
	"BUILDING_TYPE_ANCIENT":  2,
}

func (x BuildingType) String() string {
	return proto.EnumName(BuildingType_name, int32(x))
}

func (BuildingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{4}
}

type FantasyRole int32

const (
	FantasyRole_FANTASY_ROLE_UNDEFINED FantasyRole = 0
	FantasyRole_FANTASY_ROLE_CORE      FantasyRole = 1
	FantasyRole_FANTASY_ROLE_SUPPORT   FantasyRole = 2
	FantasyRole_FANTASY_ROLE_OFFLANE   FantasyRole = 3
	FantasyRole_FANTASY_ROLE_MID       FantasyRole = 4
)

var FantasyRole_name = map[int32]string{
	0: "FANTASY_ROLE_UNDEFINED",
	1: "FANTASY_ROLE_CORE",
	2: "FANTASY_ROLE_SUPPORT",
	3: "FANTASY_ROLE_OFFLANE",
	4: "FANTASY_ROLE_MID",
}

var FantasyRole_value = map[string]int32{
	"FANTASY_ROLE_UNDEFINED": 0,
	"FANTASY_ROLE_CORE":      1,
	"FANTASY_ROLE_SUPPORT":   2,
	"FANTASY_ROLE_OFFLANE":   3,
	"FANTASY_ROLE_MID":       4,
}

func (x FantasyRole) String() string {
	return proto.EnumName(FantasyRole_name, int32(x))
}

func (FantasyRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{5}
}

type LaneType int32

const (
	LaneType_LANE_TYPE_UNKNOWN LaneType = 0
	LaneType_LANE_TYPE_SAFE    LaneType = 1
	LaneType_LANE_TYPE_OFF     LaneType = 2
	LaneType_LANE_TYPE_MID     LaneType = 3
	LaneType_LANE_TYPE_JUNGLE  LaneType = 4
	LaneType_LANE_TYPE_ROAM    LaneType = 5
)

var LaneType_name = map[int32]string{
	0: "LANE_TYPE_UNKNOWN",
	1: "LANE_TYPE_SAFE",
	2: "LANE_TYPE_OFF",
	3: "LANE_TYPE_MID",
	4: "LANE_TYPE_JUNGLE",
	5: "LANE_TYPE_ROAM",
}

var LaneType_value = map[string]int32{
	"LANE_TYPE_UNKNOWN": 0,
	"LANE_TYPE_SAFE":    1,
	"LANE_TYPE_OFF":     2,
	"LANE_TYPE_MID":     3,
	"LANE_TYPE_JUNGLE":  4,
	"LANE_TYPE_ROAM":    5,
}

func (x LaneType) String() string {
	return proto.EnumName(LaneType_name, int32(x))
}

func (LaneType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{6}
}

type MatchOutcome int32

const (
	MatchOutcome_MATCH_OUTCOME_UNKNOWN                            MatchOutcome = 0
	MatchOutcome_MATCH_OUTCOME_RAD_VICTORY                        MatchOutcome = 2
	MatchOutcome_MATCH_OUTCOME_DIRE_VICTORY                       MatchOutcome = 3
	MatchOutcome_MATCH_OUTCOME_NOT_SCORED_POOR_NETWORK_CONDITIONS MatchOutcome = 64
	MatchOutcome_MATCH_OUTCOME_NOT_SCORED_LEAVER                  MatchOutcome = 65
	MatchOutcome_MATCH_OUTCOME_NOT_SCORED_SERVER_CRASH            MatchOutcome = 66
	MatchOutcome_MATCH_OUTCOME_NOT_SCORED_NEVER_STARTED           MatchOutcome = 67
	MatchOutcome_MATCH_OUTCOME_NOT_SCORED_CANCELED                MatchOutcome = 68
)

var MatchOutcome_name = map[int32]string{
	0:  "MATCH_OUTCOME_UNKNOWN",
	2:  "MATCH_OUTCOME_RAD_VICTORY",
	3:  "MATCH_OUTCOME_DIRE_VICTORY",
	64: "MATCH_OUTCOME_NOT_SCORED_POOR_NETWORK_CONDITIONS",
	65: "MATCH_OUTCOME_NOT_SCORED_LEAVER",
	66: "MATCH_OUTCOME_NOT_SCORED_SERVER_CRASH",
	67: "MATCH_OUTCOME_NOT_SCORED_NEVER_STARTED",
	68: "MATCH_OUTCOME_NOT_SCORED_CANCELED",
}

var MatchOutcome_value = map[string]int32{
	"MATCH_OUTCOME_UNKNOWN":                            0,
	"MATCH_OUTCOME_RAD_VICTORY":                        2,
	"MATCH_OUTCOME_DIRE_VICTORY":                       3,
	"MATCH_OUTCOME_NOT_SCORED_POOR_NETWORK_CONDITIONS": 64,
	"MATCH_OUTCOME_NOT_SCORED_LEAVER":                  65,
	"MATCH_OUTCOME_NOT_SCORED_SERVER_CRASH":            66,
	"MATCH_OUTCOME_NOT_SCORED_NEVER_STARTED":           67,
	"MATCH_OUTCOME_NOT_SCORED_CANCELED":                68,
}

func (x MatchOutcome) String() string {
	return proto.EnumName(MatchOutcome_name, int32(x))
}

func (MatchOutcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{7}
}

type DotaAttribute int32

const (
	DotaAttribute_DOTA_ATTRIBUTE_UNSPECIFIED DotaAttribute = 0
	DotaAttribute_DOTA_ATTRIBUTE_STRENGTH    DotaAttribute = 1
	DotaAttribute_DOTA_ATTRIBUTE_AGILITY     DotaAttribute = 2
	DotaAttribute_DOTA_ATTRIBUTE_INTELLECT   DotaAttribute = 3
)

var DotaAttribute_name = map[int32]string{
	0: "DOTA_ATTRIBUTE_UNSPECIFIED",
	1: "DOTA_ATTRIBUTE_STRENGTH",
	2: "DOTA_ATTRIBUTE_AGILITY",
	3: "DOTA_ATTRIBUTE_INTELLECT",
}

var DotaAttribute_value = map[string]int32{
	"DOTA_ATTRIBUTE_UNSPECIFIED": 0,
	"DOTA_ATTRIBUTE_STRENGTH":    1,
	"DOTA_ATTRIBUTE_AGILITY":     2,
	"DOTA_ATTRIBUTE_INTELLECT":   3,
}

func (x DotaAttribute) String() string {
	return proto.EnumName(DotaAttribute_name, int32(x))
}

func (DotaAttribute) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{8}
}

type DotaUnitCap int32

const (
	DotaUnitCap_DOTA_UNIT_CAP_NO_ATTACK     DotaUnitCap = 0
	DotaUnitCap_DOTA_UNIT_CAP_MELEE_ATTACK  DotaUnitCap = 1
	DotaUnitCap_DOTA_UNIT_CAP_RANGED_ATTACK DotaUnitCap = 2
)

var DotaUnitCap_name = map[int32]string{
	0: "DOTA_UNIT_CAP_NO_ATTACK",
	1: "DOTA_UNIT_CAP_MELEE_ATTACK",
	2: "DOTA_UNIT_CAP_RANGED_ATTACK",
}

var DotaUnitCap_value = map[string]int32{
	"DOTA_UNIT_CAP_NO_ATTACK":     0,
	"DOTA_UNIT_CAP_MELEE_ATTACK":  1,
	"DOTA_UNIT_CAP_RANGED_ATTACK": 2,
}

func (x DotaUnitCap) String() string {
	return proto.EnumName(DotaUnitCap_name, int32(x))
}

func (DotaUnitCap) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{9}
}

type HeroRole int32

const (
	HeroRole_HERO_ROLE_UNSPECIFIED HeroRole = 0
	HeroRole_HERO_ROLE_CARRY       HeroRole = 1
	HeroRole_HERO_ROLE_DISABLER    HeroRole = 2
	HeroRole_HERO_ROLE_DURABLE     HeroRole = 3
	HeroRole_HERO_ROLE_ESCAPE      HeroRole = 4
	HeroRole_HERO_ROLE_INITIATOR   HeroRole = 5
	HeroRole_HERO_ROLE_JUNGLER     HeroRole = 6
	HeroRole_HERO_ROLE_NUKER       HeroRole = 7
	HeroRole_HERO_ROLE_PUSHER      HeroRole = 8
	HeroRole_HERO_ROLE_SUPPORT     HeroRole = 9
)

var HeroRole_name = map[int32]string{
	0: "HERO_ROLE_UNSPECIFIED",
	1: "HERO_ROLE_CARRY",
	2: "HERO_ROLE_DISABLER",
	3: "HERO_ROLE_DURABLE",
	4: "HERO_ROLE_ESCAPE",
	5: "HERO_ROLE_INITIATOR",
	6: "HERO_ROLE_JUNGLER",
	7: "HERO_ROLE_NUKER",
	8: "HERO_ROLE_PUSHER",
	9: "HERO_ROLE_SUPPORT",
}

var HeroRole_value = map[string]int32{
	"HERO_ROLE_UNSPECIFIED": 0,
	"HERO_ROLE_CARRY":       1,
	"HERO_ROLE_DISABLER":    2,
	"HERO_ROLE_DURABLE":     3,
	"HERO_ROLE_ESCAPE":      4,
	"HERO_ROLE_INITIATOR":   5,
	"HERO_ROLE_JUNGLER":     6,
	"HERO_ROLE_NUKER":       7,
	"HERO_ROLE_PUSHER":      8,
	"HERO_ROLE_SUPPORT":     9,
}

func (x HeroRole) String() string {
	return proto.EnumName(HeroRole_name, int32(x))
}

func (HeroRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{10}
}

type LeagueStatus int32

const (
	LeagueStatus_LEAGUE_STATUS_UNSET       LeagueStatus = 0
	LeagueStatus_LEAGUE_STATUS_UNSUBMITTED LeagueStatus = 1
	LeagueStatus_LEAGUE_STATUS_SUBMITTED   LeagueStatus = 2
	LeagueStatus_LEAGUE_STATUS_ACCEPTED    LeagueStatus = 3
	LeagueStatus_LEAGUE_STATUS_REJECTED    LeagueStatus = 4
	LeagueStatus_LEAGUE_STATUS_CONCLUDED   LeagueStatus = 5
	LeagueStatus_LEAGUE_STATUS_DELETED     LeagueStatus = 6
)

var LeagueStatus_name = map[int32]string{
	0: "LEAGUE_STATUS_UNSET",
	1: "LEAGUE_STATUS_UNSUBMITTED",
	2: "LEAGUE_STATUS_SUBMITTED",
	3: "LEAGUE_STATUS_ACCEPTED",
	4: "LEAGUE_STATUS_REJECTED",
	5: "LEAGUE_STATUS_CONCLUDED",
	6: "LEAGUE_STATUS_DELETED",
}

var LeagueStatus_value = map[string]int32{
	"LEAGUE_STATUS_UNSET":       0,
	"LEAGUE_STATUS_UNSUBMITTED": 1,
	"LEAGUE_STATUS_SUBMITTED":   2,
	"LEAGUE_STATUS_ACCEPTED":    3,
	"LEAGUE_STATUS_REJECTED":    4,
	"LEAGUE_STATUS_CONCLUDED":   5,
	"LEAGUE_STATUS_DELETED":     6,
}

func (x LeagueStatus) String() string {
	return proto.EnumName(LeagueStatus_name, int32(x))
}

func (LeagueStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{11}
}

type LeagueRegion int32

const (
	LeagueRegion_LEAGUE_REGION_UNSET  LeagueRegion = 0
	LeagueRegion_LEAGUE_REGION_NA     LeagueRegion = 1
	LeagueRegion_LEAGUE_REGION_SA     LeagueRegion = 2
	LeagueRegion_LEAGUE_REGION_EUROPE LeagueRegion = 3
	LeagueRegion_LEAGUE_REGION_CIS    LeagueRegion = 4
	LeagueRegion_LEAGUE_REGION_CHINA  LeagueRegion = 5
	LeagueRegion_LEAGUE_REGION_SEA    LeagueRegion = 6
)

var LeagueRegion_name = map[int32]string{
	0: "LEAGUE_REGION_UNSET",
	1: "LEAGUE_REGION_NA",
	2: "LEAGUE_REGION_SA",
	3: "LEAGUE_REGION_EUROPE",
	4: "LEAGUE_REGION_CIS",
	5: "LEAGUE_REGION_CHINA",
	6: "LEAGUE_REGION_SEA",
}

var LeagueRegion_value = map[string]int32{
	"LEAGUE_REGION_UNSET":  0,
	"LEAGUE_REGION_NA":     1,
	"LEAGUE_REGION_SA":     2,
	"LEAGUE_REGION_EUROPE": 3,
	"LEAGUE_REGION_CIS":    4,
	"LEAGUE_REGION_CHINA":  5,
	"LEAGUE_REGION_SEA":    6,
}

func (x LeagueRegion) String() string {
	return proto.EnumName(LeagueRegion_name, int32(x))
}

func (LeagueRegion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{12}
}

type LeagueTier int32

const (
	LeagueTier_LEAGUE_TIER_UNSET         LeagueTier = 0
	LeagueTier_LEAGUE_TIER_AMATEUR       LeagueTier = 1
	LeagueTier_LEAGUE_TIER_PROFESSIONAL  LeagueTier = 2
	LeagueTier_LEAGUE_TIER_MINOR         LeagueTier = 3
	LeagueTier_LEAGUE_TIER_MAJOR         LeagueTier = 4
	LeagueTier_LEAGUE_TIER_INTERNATIONAL LeagueTier = 5
	LeagueTier_LEAGUE_TIER_DPC_QUALIFIER LeagueTier = 6
)

var LeagueTier_name = map[int32]string{
	0: "LEAGUE_TIER_UNSET",
	1: "LEAGUE_TIER_AMATEUR",
	2: "LEAGUE_TIER_PROFESSIONAL",
	3: "LEAGUE_TIER_MINOR",
	4: "LEAGUE_TIER_MAJOR",
	5: "LEAGUE_TIER_INTERNATIONAL",
	6: "LEAGUE_TIER_DPC_QUALIFIER",
}

var LeagueTier_value = map[string]int32{
	"LEAGUE_TIER_UNSET":         0,
	"LEAGUE_TIER_AMATEUR":       1,
	"LEAGUE_TIER_PROFESSIONAL":  2,
	"LEAGUE_TIER_MINOR":         3,
	"LEAGUE_TIER_MAJOR":         4,
	"LEAGUE_TIER_INTERNATIONAL": 5,
	"LEAGUE_TIER_DPC_QUALIFIER": 6,
}

func (x LeagueTier) String() string {
	return proto.EnumName(LeagueTier_name, int32(x))
}

func (LeagueTier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{13}
}

type LeagueTierCategory int32

const (
	LeagueTierCategory_LEAGUE_TIER_CATEGORY_UNSPECIFIED  LeagueTierCategory = 0
	LeagueTierCategory_LEAGUE_TIER_CATEGORY_AMATEUR      LeagueTierCategory = 1
	LeagueTierCategory_LEAGUE_TIER_CATEGORY_PROFESSIONAL LeagueTierCategory = 2
	LeagueTierCategory_LEAGUE_TIER_CATEGORY_DPC          LeagueTierCategory = 3
)

var LeagueTierCategory_name = map[int32]string{
	0: "LEAGUE_TIER_CATEGORY_UNSPECIFIED",
	1: "LEAGUE_TIER_CATEGORY_AMATEUR",
	2: "LEAGUE_TIER_CATEGORY_PROFESSIONAL",
	3: "LEAGUE_TIER_CATEGORY_DPC",
}

var LeagueTierCategory_value = map[string]int32{
	"LEAGUE_TIER_CATEGORY_UNSPECIFIED":  0,
	"LEAGUE_TIER_CATEGORY_AMATEUR":      1,
	"LEAGUE_TIER_CATEGORY_PROFESSIONAL": 2,
	"LEAGUE_TIER_CATEGORY_DPC":          3,
}

func (x LeagueTierCategory) String() string {
	return proto.EnumName(LeagueTierCategory_name, int32(x))
}

func (LeagueTierCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{14}
}

type CDNLeagueImageVersion int32

const (
	CDNLeagueImageVersion_CDN_LEAGUE_IMAGE_VERSION_UNSPECIFIED    CDNLeagueImageVersion = 0
	CDNLeagueImageVersion_CDN_LEAGUE_IMAGE_VERSION_LOGO_LANDSCAPE CDNLeagueImageVersion = 1
	CDNLeagueImageVersion_CDN_LEAGUE_IMAGE_VERSION_BANNER         CDNLeagueImageVersion = 8
	CDNLeagueImageVersion_CDN_LEAGUE_IMAGE_VERSION_LOGO_PORTRAIT  CDNLeagueImageVersion = 9
)

var CDNLeagueImageVersion_name = map[int32]string{
	0: "CDN_LEAGUE_IMAGE_VERSION_UNSPECIFIED",
	1: "CDN_LEAGUE_IMAGE_VERSION_LOGO_LANDSCAPE",
	8: "CDN_LEAGUE_IMAGE_VERSION_BANNER",
	9: "CDN_LEAGUE_IMAGE_VERSION_LOGO_PORTRAIT",
}

var CDNLeagueImageVersion_value = map[string]int32{
	"CDN_LEAGUE_IMAGE_VERSION_UNSPECIFIED":    0,
	"CDN_LEAGUE_IMAGE_VERSION_LOGO_LANDSCAPE": 1,
	"CDN_LEAGUE_IMAGE_VERSION_BANNER":         8,
	"CDN_LEAGUE_IMAGE_VERSION_LOGO_PORTRAIT":  9,
}

func (x CDNLeagueImageVersion) String() string {
	return proto.EnumName(CDNLeagueImageVersion_name, int32(x))
}

func (CDNLeagueImageVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9b35307a9cb8aec8, []int{15}
}

func init() {
	proto.RegisterEnum("protocol.LobbyType", LobbyType_name, LobbyType_value)
	proto.RegisterEnum("protocol.GameMode", GameMode_name, GameMode_value)
	proto.RegisterEnum("protocol.GameState", GameState_name, GameState_value)
	proto.RegisterEnum("protocol.GameTeam", GameTeam_name, GameTeam_value)
	proto.RegisterEnum("protocol.BuildingType", BuildingType_name, BuildingType_value)
	proto.RegisterEnum("protocol.FantasyRole", FantasyRole_name, FantasyRole_value)
	proto.RegisterEnum("protocol.LaneType", LaneType_name, LaneType_value)
	proto.RegisterEnum("protocol.MatchOutcome", MatchOutcome_name, MatchOutcome_value)
	proto.RegisterEnum("protocol.DotaAttribute", DotaAttribute_name, DotaAttribute_value)
	proto.RegisterEnum("protocol.DotaUnitCap", DotaUnitCap_name, DotaUnitCap_value)
	proto.RegisterEnum("protocol.HeroRole", HeroRole_name, HeroRole_value)
	proto.RegisterEnum("protocol.LeagueStatus", LeagueStatus_name, LeagueStatus_value)
	proto.RegisterEnum("protocol.LeagueRegion", LeagueRegion_name, LeagueRegion_value)
	proto.RegisterEnum("protocol.LeagueTier", LeagueTier_name, LeagueTier_value)
	proto.RegisterEnum("protocol.LeagueTierCategory", LeagueTierCategory_name, LeagueTierCategory_value)
	proto.RegisterEnum("protocol.CDNLeagueImageVersion", CDNLeagueImageVersion_name, CDNLeagueImageVersion_value)
}

func init() { proto.RegisterFile("protocol/enums.proto", fileDescriptor_9b35307a9cb8aec8) }

var fileDescriptor_9b35307a9cb8aec8 = []byte{
	// 1645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x57, 0xcd, 0x76, 0x1c, 0x39,
	0x15, 0x76, 0xb5, 0xff, 0x65, 0x27, 0xb9, 0x29, 0xdb, 0x71, 0x3c, 0x99, 0x61, 0x66, 0x98, 0x49,
	0x06, 0x8a, 0xc3, 0x18, 0x93, 0x81, 0x81, 0x1d, 0x6a, 0xd5, 0xed, 0x6e, 0xc5, 0x2a, 0xa9, 0x46,
	0x52, 0xd9, 0x34, 0x0b, 0xea, 0xb4, 0x93, 0xc2, 0xe9, 0x13, 0xbb, 0x3b, 0xc7, 0x6e, 0x2f, 0xf2,
	0x00, 0xb0, 0xe0, 0x2d, 0x78, 0x01, 0x56, 0x1c, 0xb6, 0x1c, 0x36, 0xbc, 0x00, 0x8f, 0xc0, 0x03,
	0x70, 0x78, 0x03, 0x8e, 0xaa, 0xda, 0x5d, 0xa5, 0x76, 0x7b, 0x56, 0x76, 0x7f, 0xdf, 0xa7, 0xab,
	0x7b, 0xa5, 0xfb, 0xa3, 0x22, 0xbb, 0xef, 0xaf, 0xc6, 0x93, 0xf1, 0xeb, 0xf1, 0xc5, 0x61, 0x31,
	0xba, 0xb9, 0xbc, 0xfe, 0xba, 0xfc, 0x19, 0x6e, 0xdc, 0xa2, 0xd1, 0x7f, 0x5a, 0x64, 0x53, 0x8c,
	0xcf, 0xce, 0x3e, 0xd8, 0x0f, 0xef, 0x8b, 0xf0, 0x19, 0xd9, 0x17, 0xaa, 0xdd, 0xee, 0xe7, 0xb6,
	0x9f, 0x62, 0xce, 0xa8, 0xc9, 0xa8, 0xc8, 0x13, 0x6a, 0x59, 0x0f, 0x96, 0xc2, 0x7d, 0xb2, 0xd3,
	0x20, 0x53, 0x4d, 0x99, 0xe5, 0x0c, 0x21, 0x08, 0x3f, 0x21, 0x07, 0xcd, 0x55, 0x4a, 0xa5, 0x79,
	0x5b, 0xd9, 0xe9, 0xba, 0x95, 0xf0, 0x33, 0xf2, 0x71, 0x83, 0x16, 0xd8, 0xa5, 0xac, 0x9f, 0x5b,
	0xa4, 0xc9, 0x54, 0xb1, 0x1a, 0xbe, 0x20, 0x3f, 0xbc, 0xab, 0x30, 0x4a, 0xa8, 0xfc, 0xbb, 0x0c,
	0x33, 0x9c, 0xea, 0xd6, 0xe6, 0x2c, 0x31, 0x95, 0xa4, 0x68, 0xb9, 0xe5, 0x27, 0xb7, 0x8a, 0xf5,
	0xf0, 0x53, 0xf2, 0xec, 0x6e, 0x00, 0x47, 0x27, 0x47, 0x53, 0xc1, 0x46, 0xf8, 0x03, 0xf2, 0x51,
	0x43, 0x70, 0x8a, 0x78, 0x8c, 0x32, 0xce, 0xad, 0xca, 0xb4, 0xc4, 0x3e, 0x6c, 0xce, 0xf1, 0x42,
	0x31, 0x2a, 0x1a, 0xc1, 0x90, 0xf0, 0x29, 0xd9, 0x6d, 0xf0, 0x26, 0x45, 0x66, 0xa9, 0x55, 0x1a,
	0xb6, 0xc2, 0x8f, 0xc8, 0x93, 0x06, 0x83, 0x27, 0x28, 0x6f, 0x57, 0x6d, 0x47, 0x7f, 0x5d, 0x21,
	0x1b, 0xdd, 0xc1, 0x65, 0x91, 0x8c, 0xdf, 0x14, 0x61, 0x48, 0x1e, 0x76, 0x69, 0x82, 0x79, 0xa2,
	0x62, 0xcc, 0xa5, 0x92, 0x08, 0x4b, 0x21, 0x90, 0xed, 0x1a, 0xa3, 0x29, 0x04, 0x3e, 0xc2, 0x12,
	0x68, 0xf9, 0x88, 0x8e, 0x61, 0xd9, 0x47, 0x4c, 0x0c, 0x2b, 0x73, 0x76, 0x34, 0xac, 0x86, 0x3b,
	0xe4, 0x51, 0x8d, 0x70, 0x69, 0xb5, 0x82, 0x35, 0x5f, 0xd6, 0x3b, 0x85, 0x75, 0x17, 0x57, 0xc3,
	0x38, 0x9e, 0xa0, 0x36, 0xe5, 0xb6, 0x1b, 0xbe, 0xbb, 0xbf, 0x4d, 0xa8, 0x81, 0xcd, 0xf0, 0x09,
	0x09, 0x6b, 0xcc, 0x66, 0x56, 0x69, 0x4e, 0x05, 0x10, 0xdf, 0x6e, 0xa2, 0x60, 0xcb, 0x47, 0x44,
	0x0a, 0xdb, 0xbe, 0x43, 0xa9, 0x52, 0xe2, 0x08, 0x1e, 0xf8, 0xb2, 0x4e, 0x0f, 0x1e, 0x86, 0xbb,
	0x04, 0x1a, 0xf1, 0x67, 0xc6, 0xaa, 0x04, 0x1e, 0xcd, 0x9d, 0x4a, 0x0c, 0xe0, 0x23, 0xed, 0x18,
	0x1e, 0xbb, 0x24, 0x6e, 0x9c, 0x41, 0x9b, 0x0b, 0x6e, 0xfb, 0x79, 0xac, 0x69, 0xc7, 0x42, 0xe8,
	0xef, 0x5e, 0x5e, 0x12, 0xec, 0xf8, 0x21, 0x52, 0x1d, 0x27, 0xb0, 0x1b, 0xee, 0x91, 0xc7, 0x35,
	0x56, 0x66, 0x10, 0x8f, 0x61, 0xcf, 0x15, 0x41, 0x43, 0x2a, 0xc4, 0xd4, 0xf0, 0x13, 0xdf, 0xb0,
	0xcd, 0x74, 0x5b, 0xc1, 0xbe, 0x7f, 0x4e, 0x49, 0x66, 0xa9, 0xe5, 0x4a, 0xc2, 0x53, 0x97, 0xa6,
	0x8d, 0x30, 0x14, 0x65, 0x3d, 0x34, 0x39, 0xeb, 0x51, 0x21, 0x50, 0x76, 0x11, 0x0e, 0xa2, 0xff,
	0xb6, 0xc8, 0xa6, 0x4b, 0x18, 0x33, 0x19, 0x4c, 0x8a, 0x99, 0x6d, 0x63, 0xa9, 0x75, 0x97, 0xc8,
	0x2d, 0x2c, 0x85, 0x5f, 0x91, 0x2f, 0x1a, 0xe0, 0x29, 0xe5, 0x36, 0xef, 0x28, 0x9d, 0xa7, 0x82,
	0xf6, 0x51, 0x9b, 0xdc, 0xaa, 0x5c, 0x28, 0x1a, 0x57, 0xe5, 0xd9, 0x10, 0xf6, 0x50, 0xab, 0xdc,
	0xa0, 0x40, 0x56, 0xfa, 0xd2, 0x0a, 0x3f, 0x26, 0x4f, 0x1b, 0xb4, 0xb1, 0x9a, 0x5a, 0xec, 0xf6,
	0x73, 0xcb, 0x13, 0x84, 0xe5, 0x59, 0xbc, 0x15, 0x9b, 0x6a, 0xcc, 0xdd, 0x4f, 0x58, 0x99, 0x85,
	0x50, 0x11, 0xe5, 0xbf, 0x5c, 0xe6, 0xa9, 0x56, 0x5d, 0x8d, 0xc6, 0xc0, 0xea, 0x2c, 0xa3, 0xa6,
	0x2b, 0x95, 0xb1, 0xd5, 0xd2, 0xb5, 0xf0, 0x80, 0xec, 0x35, 0x98, 0x98, 0x1b, 0xa6, 0xa4, 0x44,
	0x66, 0x61, 0x7d, 0xce, 0x99, 0xb2, 0x49, 0x98, 0x9e, 0x3a, 0x65, 0xd4, 0x20, 0x6c, 0xb8, 0xfa,
	0x6f, 0xb0, 0x55, 0x52, 0x54, 0x5b, 0x1b, 0xb4, 0x59, 0x0a, 0x9b, 0xe1, 0x17, 0xe4, 0xd3, 0x45,
	0x87, 0x92, 0xd0, 0x74, 0x76, 0x20, 0x64, 0xee, 0x38, 0x05, 0x35, 0x16, 0xb6, 0xa2, 0xbf, 0xb7,
	0xaa, 0x12, 0xb5, 0xc5, 0xe0, 0x72, 0x76, 0xf9, 0xa5, 0x03, 0x99, 0x3c, 0x96, 0xea, 0x54, 0xc2,
	0xd2, 0xec, 0x3a, 0x4b, 0xb8, 0xab, 0x54, 0xdc, 0xcd, 0xfa, 0x06, 0x5a, 0xbe, 0xbc, 0x4d, 0x2b,
	0x78, 0xd9, 0x97, 0x4b, 0xcc, 0xac, 0xa6, 0xc2, 0xc0, 0xca, 0x2c, 0xb5, 0x2b, 0x5c, 0xb9, 0x3f,
	0xb0, 0xea, 0x1b, 0xa9, 0x62, 0x3b, 0x82, 0xb5, 0x45, 0xf0, 0xcf, 0x61, 0x7d, 0x11, 0xfc, 0x12,
	0x36, 0x16, 0xc1, 0xdf, 0xc0, 0xe6, 0x22, 0xf8, 0x17, 0x40, 0x16, 0xc1, 0xbf, 0x84, 0xad, 0x45,
	0xf0, 0xb7, 0xb0, 0xbd, 0x08, 0xfe, 0x15, 0x3c, 0x88, 0x7e, 0x4f, 0xb6, 0xdb, 0x37, 0xc3, 0x8b,
	0x37, 0xc3, 0xd1, 0x79, 0x39, 0x43, 0xf6, 0xc9, 0x4e, 0x3b, 0xe3, 0x22, 0xe6, 0xb2, 0x5b, 0xb5,
	0x42, 0xab, 0x4e, 0x51, 0xc3, 0x92, 0x6b, 0x90, 0x3e, 0xd1, 0xa6, 0x5a, 0x53, 0x76, 0x6c, 0x20,
	0x70, 0x29, 0xe1, 0x73, 0x54, 0x32, 0xee, 0x8a, 0xb3, 0x15, 0xfd, 0x39, 0x20, 0x5b, 0x9d, 0xc1,
	0x68, 0x32, 0xb8, 0xfe, 0xa0, 0xc7, 0x17, 0x85, 0x33, 0xd3, 0xa1, 0xd2, 0x52, 0xd3, 0xcf, 0xb5,
	0x12, 0x98, 0x67, 0x32, 0xc6, 0x0e, 0x97, 0x18, 0xc3, 0x92, 0x73, 0xd1, 0xe3, 0x98, 0xd2, 0x6e,
	0x40, 0x3d, 0x25, 0xbb, 0x1e, 0x6c, 0xb2, 0x34, 0x55, 0xda, 0x42, 0xeb, 0x0e, 0xa3, 0x3a, 0x1d,
	0x41, 0xa5, 0x4b, 0xfc, 0x5d, 0x02, 0x1e, 0xe3, 0xca, 0x7f, 0x25, 0xfa, 0x63, 0x40, 0x36, 0xc4,
	0x60, 0x54, 0x94, 0x91, 0xee, 0x91, 0xc7, 0x4e, 0x5c, 0x39, 0x5c, 0x67, 0x49, 0x48, 0x1e, 0xd6,
	0xb0, 0xa1, 0x1d, 0xe7, 0xc1, 0x63, 0xf2, 0xa0, 0xc6, 0x54, 0xa7, 0x03, 0x2d, 0x1f, 0x72, 0xd6,
	0xcb, 0x3d, 0x6b, 0xe8, 0x55, 0x26, 0xbb, 0xc2, 0x55, 0x9a, 0x67, 0x4f, 0x2b, 0x97, 0x2c, 0xd1,
	0x3f, 0x5b, 0x64, 0x3b, 0x19, 0x4c, 0x5e, 0xbf, 0x55, 0x37, 0x93, 0xd7, 0xe3, 0xcb, 0xc2, 0x1d,
	0x60, 0x39, 0x6c, 0x72, 0x95, 0x59, 0xa6, 0x92, 0xa6, 0x3f, 0x9f, 0x90, 0x03, 0x9f, 0xd2, 0x34,
	0xce, 0x4f, 0x38, 0xb3, 0x4a, 0xf7, 0xa1, 0xe5, 0x26, 0x9e, 0x4f, 0xc7, 0x5c, 0xe3, 0x8c, 0x5f,
	0x0e, 0xbf, 0x21, 0x3f, 0xf3, 0x79, 0xa9, 0x6c, 0x6e, 0xdc, 0xc9, 0xc6, 0xae, 0x7d, 0xeb, 0x5c,
	0xa2, 0x3d, 0x55, 0xfa, 0x38, 0x67, 0x4a, 0xc6, 0xdc, 0x35, 0x15, 0x03, 0xbf, 0x71, 0x85, 0x78,
	0xef, 0x2a, 0x81, 0xf4, 0x04, 0x35, 0xd0, 0xf0, 0xc7, 0xe4, 0xf9, 0xbd, 0x22, 0x83, 0xfa, 0x04,
	0x75, 0xce, 0x34, 0x35, 0x3d, 0x68, 0x87, 0x11, 0x79, 0x71, 0xaf, 0x54, 0xba, 0x71, 0xe5, 0xaa,
	0x59, 0x5b, 0x8c, 0x81, 0x85, 0xcf, 0xc9, 0xe7, 0xf7, 0x6a, 0x19, 0x95, 0x0c, 0x05, 0xc6, 0x10,
	0x47, 0x7f, 0x0a, 0xc8, 0x83, 0x78, 0x3c, 0x19, 0xd0, 0xc9, 0xe4, 0x6a, 0x78, 0x76, 0x33, 0x29,
	0xdc, 0x51, 0xc4, 0xca, 0xd2, 0x9c, 0x5a, 0xab, 0x79, 0x3b, 0xb3, 0xee, 0x14, 0xdd, 0x88, 0xe7,
	0x1d, 0x5e, 0xa6, 0xd7, 0x33, 0xb2, 0x3f, 0xc7, 0x1b, 0xab, 0x51, 0x76, 0x6d, 0x0f, 0x02, 0x97,
	0x97, 0x73, 0x24, 0xed, 0x96, 0xb3, 0xa7, 0xea, 0xb1, 0x73, 0x1c, 0x97, 0x16, 0x85, 0x6b, 0xc2,
	0xb0, 0x1c, 0xbd, 0x23, 0x5b, 0xce, 0x8f, 0x6c, 0x34, 0x9c, 0xb0, 0xc1, 0xfb, 0xd9, 0x2e, 0x99,
	0xe4, 0x36, 0x67, 0x34, 0xcd, 0xa5, 0x72, 0x0b, 0x29, 0x3b, 0x86, 0xa5, 0x99, 0x8b, 0x33, 0x32,
	0x41, 0x81, 0x78, 0xcb, 0x07, 0xae, 0x2d, 0xfb, 0xbc, 0xa6, 0xb2, 0x8b, 0xf1, 0xad, 0xa0, 0x15,
	0xfd, 0x2f, 0x20, 0x1b, 0xbd, 0xe2, 0x6a, 0x5c, 0xd6, 0xd2, 0x01, 0xd9, 0x2b, 0xe7, 0xc1, 0xb4,
	0x90, 0x9a, 0xb1, 0xee, 0x90, 0x47, 0x35, 0xc5, 0xa8, 0xd6, 0x7d, 0x08, 0x5c, 0x47, 0xab, 0xc1,
	0x98, 0x1b, 0xda, 0x16, 0xa8, 0xab, 0x06, 0xd8, 0xc0, 0x33, 0xed, 0xf0, 0x2a, 0x9f, 0x6b, 0x18,
	0x0d, 0xa3, 0xa9, 0xcb, 0xe7, 0x7d, 0xb2, 0x53, 0xa3, 0x6e, 0x98, 0xf1, 0xf2, 0x05, 0xb5, 0xea,
	0x5b, 0xa9, 0xd2, 0x5f, 0xc3, 0x9a, 0xef, 0x89, 0xcc, 0x8e, 0x51, 0xc3, 0xba, 0x6f, 0x3a, 0xcd,
	0x4c, 0x0f, 0x75, 0xd5, 0xfe, 0x6a, 0xf4, 0xb6, 0xca, 0x37, 0xa3, 0x7f, 0x07, 0x64, 0x5b, 0x14,
	0x83, 0xf3, 0x9b, 0x72, 0x9e, 0xde, 0x5c, 0x97, 0x4f, 0x59, 0xa4, 0xdd, 0xac, 0x9a, 0x01, 0x99,
	0x71, 0xb1, 0xa3, 0xad, 0x6a, 0xe5, 0x0e, 0x91, 0xb5, 0x13, 0x6e, 0x5d, 0x66, 0x05, 0xe5, 0xfb,
	0xd8, 0xa3, 0x6b, 0xb2, 0x55, 0x3e, 0x00, 0x3d, 0x92, 0x32, 0x86, 0xa9, 0xe3, 0x96, 0xef, 0x72,
	0x1a, 0x5f, 0x21, 0x73, 0xdc, 0xca, 0x5d, 0xa3, 0x4c, 0x49, 0x26, 0xb2, 0x18, 0x63, 0x58, 0x75,
	0x37, 0xe4, 0x93, 0x31, 0x0a, 0x74, 0xeb, 0xd6, 0xa2, 0xbf, 0xcd, 0xa2, 0xd2, 0xc5, 0xf9, 0x70,
	0x3c, 0x6a, 0x44, 0xa5, 0xb1, 0xcb, 0x95, 0x9c, 0x45, 0xe5, 0xfa, 0x8a, 0x47, 0x48, 0x0a, 0xc1,
	0x5d, 0xd4, 0xd0, 0xaa, 0x23, 0xfa, 0x28, 0x66, 0x5a, 0xa5, 0xee, 0x36, 0x5d, 0xbb, 0xf3, 0x18,
	0xc6, 0x4d, 0x75, 0x9d, 0x73, 0x70, 0x8f, 0x4b, 0x5a, 0x5d, 0xe7, 0x9c, 0x7d, 0xa4, 0xb0, 0x16,
	0xfd, 0x2b, 0x20, 0xa4, 0x72, 0xdb, 0x0e, 0x8b, 0xab, 0x86, 0xca, 0x72, 0xd4, 0x33, 0x97, 0x6b,
	0xab, 0x25, 0x4c, 0x13, 0x6a, 0x31, 0xd3, 0x10, 0xb8, 0x52, 0x6a, 0x12, 0xa9, 0x56, 0x1d, 0x34,
	0x86, 0x2b, 0x49, 0x45, 0x95, 0x88, 0x4d, 0x36, 0xe1, 0x52, 0x69, 0xcf, 0xf5, 0x0a, 0xa6, 0xaf,
	0x94, 0x86, 0x95, 0xc6, 0x6d, 0x97, 0xb0, 0xab, 0x49, 0x2d, 0xcb, 0x37, 0x1a, 0x15, 0xb0, 0x3a,
	0x4f, 0xc7, 0x29, 0xcb, 0xbf, 0xcb, 0xa8, 0x70, 0x15, 0xa2, 0x61, 0x2d, 0xfa, 0x4b, 0x40, 0xc2,
	0x3a, 0x10, 0x36, 0x98, 0x14, 0xe7, 0xe3, 0xab, 0x0f, 0xe1, 0x97, 0xe4, 0xb3, 0xe6, 0x2a, 0xe6,
	0x9e, 0x53, 0x4a, 0xf7, 0xe7, 0xca, 0xcb, 0x7d, 0xca, 0x2c, 0x52, 0xd5, 0x81, 0x3e, 0x27, 0x9f,
	0x2f, 0x54, 0xcc, 0x45, 0x3c, 0x77, 0x1e, 0x33, 0x59, 0x9c, 0x32, 0x58, 0x8e, 0xfe, 0x11, 0x90,
	0x3d, 0x16, 0xcb, 0xca, 0x4d, 0x7e, 0x39, 0x38, 0x2f, 0x4e, 0x8a, 0xab, 0x6b, 0x97, 0x2c, 0x3f,
	0x22, 0x5f, 0xb2, 0x58, 0xe6, 0xd3, 0xb5, 0x3c, 0xa1, 0x5d, 0xcc, 0xdd, 0xab, 0x7f, 0x9a, 0x37,
	0x0d, 0x57, 0x7f, 0x42, 0xbe, 0xba, 0x57, 0x29, 0x54, 0x57, 0xe5, 0x82, 0xca, 0xb8, 0x2a, 0xee,
	0xc0, 0xf5, 0xfd, 0x7b, 0xc5, 0x6d, 0x2a, 0x65, 0x59, 0xa6, 0x11, 0x79, 0xf1, 0xfd, 0x16, 0x5d,
	0xdd, 0x6a, 0xca, 0x2d, 0x6c, 0xb6, 0x7f, 0xfd, 0xbb, 0x6f, 0xcf, 0x87, 0x93, 0xb7, 0x37, 0x67,
	0x5f, 0xbf, 0x1e, 0x5f, 0x1e, 0x1e, 0xbd, 0x7c, 0x77, 0x38, 0x1a, 0x9e, 0xbf, 0x9d, 0xfc, 0xf4,
	0x7a, 0x32, 0xb8, 0x78, 0x57, 0x5c, 0x1d, 0x0e, 0x47, 0x93, 0xe2, 0x6a, 0x34, 0xb8, 0x38, 0x2c,
	0x3f, 0x69, 0xcf, 0x6e, 0xfe, 0x70, 0x78, 0xfb, 0x6d, 0x7b, 0xb6, 0x56, 0xfe, 0xf7, 0xf2, 0xff,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x72, 0x4c, 0x8c, 0x04, 0x0f, 0x00, 0x00,
}
