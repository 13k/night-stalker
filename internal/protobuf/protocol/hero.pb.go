// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/hero.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Hero struct {
	Id                   uint64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LocalizedName        string        `protobuf:"bytes,3,opt,name=localized_name,json=localizedName,proto3" json:"localized_name,omitempty"`
	Slug                 string        `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Aliases              []string      `protobuf:"bytes,5,rep,name=aliases,proto3" json:"aliases,omitempty"`
	Roles                []HeroRole    `protobuf:"varint,6,rep,packed,name=roles,proto3,enum=protocol.HeroRole" json:"roles,omitempty"`
	RoleLevels           []int64       `protobuf:"varint,7,rep,packed,name=role_levels,json=roleLevels,proto3" json:"role_levels,omitempty"`
	Complexity           int64         `protobuf:"varint,8,opt,name=complexity,proto3" json:"complexity,omitempty"`
	Legs                 int64         `protobuf:"varint,9,opt,name=legs,proto3" json:"legs,omitempty"`
	AttributePrimary     DotaAttribute `protobuf:"varint,10,opt,name=attribute_primary,json=attributePrimary,proto3,enum=protocol.DotaAttribute" json:"attribute_primary,omitempty"`
	AttackCapabilities   DotaUnitCap   `protobuf:"varint,11,opt,name=attack_capabilities,json=attackCapabilities,proto3,enum=protocol.DotaUnitCap" json:"attack_capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Hero) Reset()         { *m = Hero{} }
func (m *Hero) String() string { return proto.CompactTextString(m) }
func (*Hero) ProtoMessage()    {}
func (*Hero) Descriptor() ([]byte, []int) {
	return fileDescriptor_3222b65d2a2ec457, []int{0}
}

func (m *Hero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hero.Unmarshal(m, b)
}
func (m *Hero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hero.Marshal(b, m, deterministic)
}
func (m *Hero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero.Merge(m, src)
}
func (m *Hero) XXX_Size() int {
	return xxx_messageInfo_Hero.Size(m)
}
func (m *Hero) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero.DiscardUnknown(m)
}

var xxx_messageInfo_Hero proto.InternalMessageInfo

func (m *Hero) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Hero) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Hero) GetLocalizedName() string {
	if m != nil {
		return m.LocalizedName
	}
	return ""
}

func (m *Hero) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Hero) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *Hero) GetRoles() []HeroRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Hero) GetRoleLevels() []int64 {
	if m != nil {
		return m.RoleLevels
	}
	return nil
}

func (m *Hero) GetComplexity() int64 {
	if m != nil {
		return m.Complexity
	}
	return 0
}

func (m *Hero) GetLegs() int64 {
	if m != nil {
		return m.Legs
	}
	return 0
}

func (m *Hero) GetAttributePrimary() DotaAttribute {
	if m != nil {
		return m.AttributePrimary
	}
	return DotaAttribute_DOTA_ATTRIBUTE_UNSPECIFIED
}

func (m *Hero) GetAttackCapabilities() DotaUnitCap {
	if m != nil {
		return m.AttackCapabilities
	}
	return DotaUnitCap_DOTA_UNIT_CAP_NO_ATTACK
}

type HeroMatches struct {
	Hero                 *Hero     `protobuf:"bytes,100,opt,name=hero,proto3" json:"hero,omitempty"`
	Matches              []*Match  `protobuf:"bytes,101,rep,name=matches,proto3" json:"matches,omitempty"`
	KnownPlayers         []*Player `protobuf:"bytes,102,rep,name=known_players,json=knownPlayers,proto3" json:"known_players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HeroMatches) Reset()         { *m = HeroMatches{} }
func (m *HeroMatches) String() string { return proto.CompactTextString(m) }
func (*HeroMatches) ProtoMessage()    {}
func (*HeroMatches) Descriptor() ([]byte, []int) {
	return fileDescriptor_3222b65d2a2ec457, []int{1}
}

func (m *HeroMatches) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeroMatches.Unmarshal(m, b)
}
func (m *HeroMatches) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeroMatches.Marshal(b, m, deterministic)
}
func (m *HeroMatches) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeroMatches.Merge(m, src)
}
func (m *HeroMatches) XXX_Size() int {
	return xxx_messageInfo_HeroMatches.Size(m)
}
func (m *HeroMatches) XXX_DiscardUnknown() {
	xxx_messageInfo_HeroMatches.DiscardUnknown(m)
}

var xxx_messageInfo_HeroMatches proto.InternalMessageInfo

func (m *HeroMatches) GetHero() *Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *HeroMatches) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *HeroMatches) GetKnownPlayers() []*Player {
	if m != nil {
		return m.KnownPlayers
	}
	return nil
}

func init() {
	proto.RegisterType((*Hero)(nil), "protocol.Hero")
	proto.RegisterType((*HeroMatches)(nil), "protocol.HeroMatches")
}

func init() { proto.RegisterFile("protocol/hero.proto", fileDescriptor_3222b65d2a2ec457) }

var fileDescriptor_3222b65d2a2ec457 = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x57, 0x9a, 0x6c, 0x5d, 0x5f, 0x58, 0x18, 0x1e, 0x13, 0x16, 0x07, 0x88, 0x2a, 0x21, 0x85,
	0x03, 0x8d, 0xe8, 0x84, 0x10, 0x47, 0xd8, 0x84, 0x38, 0x00, 0x9a, 0x2c, 0x71, 0xe1, 0x12, 0x39,
	0xe9, 0x5b, 0x6b, 0xd5, 0x89, 0x23, 0xdb, 0x01, 0xca, 0x67, 0xe0, 0xc6, 0x17, 0x46, 0xb6, 0x49,
	0x3b, 0xb8, 0xfd, 0xde, 0xef, 0x9f, 0x5e, 0xf2, 0x0c, 0xe7, 0xbd, 0x56, 0x56, 0x35, 0x4a, 0x96,
	0x1b, 0xd4, 0x6a, 0xe1, 0x27, 0x72, 0x32, 0x92, 0x8f, 0x1f, 0xee, 0x65, 0xec, 0x86, 0xd6, 0x04,
	0xfd, 0x0e, 0xdb, 0x72, 0xdb, 0x6c, 0xfe, 0xb2, 0x17, 0x7b, 0xb6, 0x97, 0x7c, 0x87, 0x3a, 0xd0,
	0xf3, 0x5f, 0x31, 0x24, 0x1f, 0x50, 0x2b, 0x92, 0xc1, 0x44, 0xac, 0x68, 0x94, 0x47, 0x45, 0xc2,
	0x26, 0x62, 0x45, 0x08, 0x24, 0x1d, 0x6f, 0x91, 0x4e, 0xf2, 0xa8, 0x98, 0x31, 0x8f, 0xc9, 0x33,
	0xc8, 0xa4, 0x6a, 0xb8, 0x14, 0x3f, 0x71, 0x55, 0x79, 0x35, 0xf6, 0xea, 0xe9, 0x9e, 0xfd, 0xec,
	0x6c, 0x04, 0x12, 0x23, 0x87, 0x35, 0x4d, 0x42, 0xd4, 0x61, 0x42, 0x61, 0xca, 0xa5, 0xe0, 0x06,
	0x0d, 0x3d, 0xca, 0xe3, 0x62, 0xc6, 0xc6, 0x91, 0x14, 0x70, 0xa4, 0x95, 0x44, 0x43, 0x8f, 0xf3,
	0xb8, 0xc8, 0x96, 0x64, 0x31, 0x2e, 0xba, 0x70, 0x7b, 0x31, 0x25, 0x91, 0x05, 0x03, 0x79, 0x0a,
	0xa9, 0x03, 0x95, 0xc4, 0x6f, 0x28, 0x0d, 0x9d, 0xe6, 0x71, 0x11, 0x33, 0x70, 0xd4, 0x47, 0xcf,
	0x90, 0x27, 0x00, 0x8d, 0x6a, 0x7b, 0x89, 0x3f, 0x84, 0xdd, 0xd1, 0x93, 0x3c, 0x72, 0xfa, 0x81,
	0x71, 0x8b, 0x49, 0x5c, 0x1b, 0x3a, 0xf3, 0x8a, 0xc7, 0xe4, 0x1a, 0x1e, 0x70, 0x6b, 0xb5, 0xa8,
	0x07, 0x8b, 0x55, 0xaf, 0x45, 0xcb, 0xf5, 0x8e, 0x42, 0x1e, 0x15, 0xd9, 0xf2, 0xd1, 0x61, 0x95,
	0x6b, 0x65, 0xf9, 0xdb, 0xd1, 0xc6, 0xce, 0xf6, 0x89, 0x9b, 0x10, 0x20, 0xef, 0xe1, 0x9c, 0x5b,
	0xcb, 0x9b, 0x6d, 0xd5, 0xf0, 0x9e, 0xd7, 0x42, 0x0a, 0x2b, 0xd0, 0xd0, 0xd4, 0xf7, 0x5c, 0xfc,
	0xdb, 0xf3, 0xa5, 0x13, 0xf6, 0x8a, 0xf7, 0x8c, 0x84, 0xc4, 0xd5, 0x9d, 0xc0, 0xfc, 0x77, 0x04,
	0xa9, 0xfb, 0xec, 0x4f, 0xee, 0x72, 0x68, 0xc8, 0x1c, 0x12, 0x77, 0x79, 0xba, 0xca, 0xa3, 0x22,
	0x5d, 0x66, 0xff, 0xfd, 0x1b, 0xaf, 0x91, 0xe7, 0x30, 0x6d, 0x83, 0x9d, 0x62, 0x1e, 0x17, 0xe9,
	0xf2, 0xfe, 0xc1, 0xe6, 0x7b, 0xd8, 0xa8, 0x93, 0x57, 0x70, 0xba, 0xed, 0xd4, 0xf7, 0xae, 0x0a,
	0x6f, 0xc0, 0xd0, 0x5b, 0x1f, 0x38, 0x3b, 0x04, 0x6e, 0xbc, 0xc0, 0xee, 0x79, 0x5b, 0x18, 0xcc,
	0xbb, 0x37, 0x5f, 0x5f, 0xaf, 0x85, 0xdd, 0x0c, 0xf5, 0xa2, 0x51, 0x6d, 0xf9, 0xf2, 0x72, 0x5b,
	0x76, 0x62, 0xbd, 0xb1, 0x2f, 0x8c, 0xe5, 0x72, 0x8b, 0xba, 0x14, 0x9d, 0x45, 0xdd, 0x71, 0x59,
	0xfa, 0x9a, 0x7a, 0xb8, 0x2d, 0xc7, 0xbe, 0xfa, 0xd8, 0xa3, 0xcb, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xae, 0x85, 0x65, 0x59, 0xca, 0x02, 0x00, 0x00,
}
