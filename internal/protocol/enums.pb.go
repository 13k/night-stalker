// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enums.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LobbyType int32

const (
	LobbyType_LobbyTypeCasualMatch          LobbyType = 0
	LobbyType_LobbyTypePractice             LobbyType = 1
	LobbyType_LobbyTypeCoopBotMatch         LobbyType = 4
	LobbyType_LobbyTypeLegacyTeamMatch      LobbyType = 5
	LobbyType_LobbyTypeLegacySoloQueueMatch LobbyType = 6
	LobbyType_LobbyTypeCompetitiveMatch     LobbyType = 7
	LobbyType_LobbyTypeCasual_1V1Match      LobbyType = 8
	LobbyType_LobbyTypeWeekendTourney       LobbyType = 9
	LobbyType_LobbyTypeLocalBotMatch        LobbyType = 10
	LobbyType_LobbyTypeSpectator            LobbyType = 11
	LobbyType_LobbyTypeEventMatch           LobbyType = 12
)

var LobbyType_name = map[int32]string{
	0:  "LobbyTypeCasualMatch",
	1:  "LobbyTypePractice",
	4:  "LobbyTypeCoopBotMatch",
	5:  "LobbyTypeLegacyTeamMatch",
	6:  "LobbyTypeLegacySoloQueueMatch",
	7:  "LobbyTypeCompetitiveMatch",
	8:  "LobbyTypeCasual_1V1Match",
	9:  "LobbyTypeWeekendTourney",
	10: "LobbyTypeLocalBotMatch",
	11: "LobbyTypeSpectator",
	12: "LobbyTypeEventMatch",
}

var LobbyType_value = map[string]int32{
	"LobbyTypeCasualMatch":          0,
	"LobbyTypePractice":             1,
	"LobbyTypeCoopBotMatch":         4,
	"LobbyTypeLegacyTeamMatch":      5,
	"LobbyTypeLegacySoloQueueMatch": 6,
	"LobbyTypeCompetitiveMatch":     7,
	"LobbyTypeCasual_1V1Match":      8,
	"LobbyTypeWeekendTourney":       9,
	"LobbyTypeLocalBotMatch":        10,
	"LobbyTypeSpectator":            11,
	"LobbyTypeEventMatch":           12,
}

func (x LobbyType) String() string {
	return proto.EnumName(LobbyType_name, int32(x))
}

func (LobbyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{0}
}

type GameMode int32

const (
	GameMode_GameModeNone             GameMode = 0
	GameMode_GameModeAP               GameMode = 1
	GameMode_GameModeCM               GameMode = 2
	GameMode_GameModeRD               GameMode = 3
	GameMode_GameModeSD               GameMode = 4
	GameMode_GameModeAR               GameMode = 5
	GameMode_GameModeIntro            GameMode = 6
	GameMode_GameModeHW               GameMode = 7
	GameMode_GameModeReverseCM        GameMode = 8
	GameMode_GameModeXmas             GameMode = 9
	GameMode_GameModeTutorial         GameMode = 10
	GameMode_GameModeMO               GameMode = 11
	GameMode_GameModeLP               GameMode = 12
	GameMode_GameModePool1            GameMode = 13
	GameMode_GameModeFH               GameMode = 14
	GameMode_GameModeCustom           GameMode = 15
	GameMode_GameModeCD               GameMode = 16
	GameMode_GameModeBD               GameMode = 17
	GameMode_GameModeAbilityDraft     GameMode = 18
	GameMode_GameModeEvent            GameMode = 19
	GameMode_GameModeARDM             GameMode = 20
	GameMode_GameMode1V1Mid           GameMode = 21
	GameMode_GameModeAllDraft         GameMode = 22
	GameMode_GameModeTurbo            GameMode = 23
	GameMode_GameModeMutation         GameMode = 24
	GameMode_GameModeCoachesChallenge GameMode = 25
)

var GameMode_name = map[int32]string{
	0:  "GameModeNone",
	1:  "GameModeAP",
	2:  "GameModeCM",
	3:  "GameModeRD",
	4:  "GameModeSD",
	5:  "GameModeAR",
	6:  "GameModeIntro",
	7:  "GameModeHW",
	8:  "GameModeReverseCM",
	9:  "GameModeXmas",
	10: "GameModeTutorial",
	11: "GameModeMO",
	12: "GameModeLP",
	13: "GameModePool1",
	14: "GameModeFH",
	15: "GameModeCustom",
	16: "GameModeCD",
	17: "GameModeBD",
	18: "GameModeAbilityDraft",
	19: "GameModeEvent",
	20: "GameModeARDM",
	21: "GameMode1V1Mid",
	22: "GameModeAllDraft",
	23: "GameModeTurbo",
	24: "GameModeMutation",
	25: "GameModeCoachesChallenge",
}

var GameMode_value = map[string]int32{
	"GameModeNone":             0,
	"GameModeAP":               1,
	"GameModeCM":               2,
	"GameModeRD":               3,
	"GameModeSD":               4,
	"GameModeAR":               5,
	"GameModeIntro":            6,
	"GameModeHW":               7,
	"GameModeReverseCM":        8,
	"GameModeXmas":             9,
	"GameModeTutorial":         10,
	"GameModeMO":               11,
	"GameModeLP":               12,
	"GameModePool1":            13,
	"GameModeFH":               14,
	"GameModeCustom":           15,
	"GameModeCD":               16,
	"GameModeBD":               17,
	"GameModeAbilityDraft":     18,
	"GameModeEvent":            19,
	"GameModeARDM":             20,
	"GameMode1V1Mid":           21,
	"GameModeAllDraft":         22,
	"GameModeTurbo":            23,
	"GameModeMutation":         24,
	"GameModeCoachesChallenge": 25,
}

func (x GameMode) String() string {
	return proto.EnumName(GameMode_name, int32(x))
}

func (GameMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{1}
}

type GameState int32

const (
	GameState_GameStateInit                 GameState = 0
	GameState_GameStateWaitForPlayersToLoad GameState = 1
	GameState_GameStateHeroSelection        GameState = 2
	GameState_GameStateStrategyTime         GameState = 3
	GameState_GameStatePreGame              GameState = 4
	GameState_GameStateGameInProgress       GameState = 5
	GameState_GameStatePostGame             GameState = 6
	GameState_GameStateDisconnect           GameState = 7
	GameState_GameStateTeamShowcase         GameState = 8
	GameState_GameStateCustomGameSetup      GameState = 9
	GameState_GameStateWaitForMapToLoad     GameState = 10
	GameState_GameStateLast                 GameState = 11
)

var GameState_name = map[int32]string{
	0:  "GameStateInit",
	1:  "GameStateWaitForPlayersToLoad",
	2:  "GameStateHeroSelection",
	3:  "GameStateStrategyTime",
	4:  "GameStatePreGame",
	5:  "GameStateGameInProgress",
	6:  "GameStatePostGame",
	7:  "GameStateDisconnect",
	8:  "GameStateTeamShowcase",
	9:  "GameStateCustomGameSetup",
	10: "GameStateWaitForMapToLoad",
	11: "GameStateLast",
}

var GameState_value = map[string]int32{
	"GameStateInit":                 0,
	"GameStateWaitForPlayersToLoad": 1,
	"GameStateHeroSelection":        2,
	"GameStateStrategyTime":         3,
	"GameStatePreGame":              4,
	"GameStateGameInProgress":       5,
	"GameStatePostGame":             6,
	"GameStateDisconnect":           7,
	"GameStateTeamShowcase":         8,
	"GameStateCustomGameSetup":      9,
	"GameStateWaitForMapToLoad":     10,
	"GameStateLast":                 11,
}

func (x GameState) String() string {
	return proto.EnumName(GameState_name, int32(x))
}

func (GameState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{2}
}

type GameTeam int32

const (
	GameTeam_GameTeamUnknown  GameTeam = 0
	GameTeam_GameTeamGoodguys GameTeam = 2
	GameTeam_GameTeamBadguys  GameTeam = 3
	GameTeam_GameTeamNeutrals GameTeam = 4
	GameTeam_GameTeamNoteam   GameTeam = 5
	GameTeam_GameTeamCustom1  GameTeam = 6
	GameTeam_GameTeamCustom2  GameTeam = 7
	GameTeam_GameTeamCustom3  GameTeam = 8
	GameTeam_GameTeamCustom4  GameTeam = 9
	GameTeam_GameTeamCustom5  GameTeam = 10
	GameTeam_GameTeamCustom6  GameTeam = 11
	GameTeam_GameTeamCustom7  GameTeam = 12
	GameTeam_GameTeamCustom8  GameTeam = 13
)

var GameTeam_name = map[int32]string{
	0:  "GameTeamUnknown",
	2:  "GameTeamGoodguys",
	3:  "GameTeamBadguys",
	4:  "GameTeamNeutrals",
	5:  "GameTeamNoteam",
	6:  "GameTeamCustom1",
	7:  "GameTeamCustom2",
	8:  "GameTeamCustom3",
	9:  "GameTeamCustom4",
	10: "GameTeamCustom5",
	11: "GameTeamCustom6",
	12: "GameTeamCustom7",
	13: "GameTeamCustom8",
}

var GameTeam_value = map[string]int32{
	"GameTeamUnknown":  0,
	"GameTeamGoodguys": 2,
	"GameTeamBadguys":  3,
	"GameTeamNeutrals": 4,
	"GameTeamNoteam":   5,
	"GameTeamCustom1":  6,
	"GameTeamCustom2":  7,
	"GameTeamCustom3":  8,
	"GameTeamCustom4":  9,
	"GameTeamCustom5":  10,
	"GameTeamCustom6":  11,
	"GameTeamCustom7":  12,
	"GameTeamCustom8":  13,
}

func (x GameTeam) String() string {
	return proto.EnumName(GameTeam_name, int32(x))
}

func (GameTeam) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{3}
}

type BuildingType int32

const (
	BuildingType_BuildingTypeTower    BuildingType = 0
	BuildingType_BuildingTypeBarracks BuildingType = 1
	BuildingType_BuildingTypeAncient  BuildingType = 2
)

var BuildingType_name = map[int32]string{
	0: "BuildingTypeTower",
	1: "BuildingTypeBarracks",
	2: "BuildingTypeAncient",
}

var BuildingType_value = map[string]int32{
	"BuildingTypeTower":    0,
	"BuildingTypeBarracks": 1,
	"BuildingTypeAncient":  2,
}

func (x BuildingType) String() string {
	return proto.EnumName(BuildingType_name, int32(x))
}

func (BuildingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{4}
}

type FantasyRole int32

const (
	FantasyRole_FantasyRoleUndefined FantasyRole = 0
	FantasyRole_FantasyRoleCore      FantasyRole = 1
	FantasyRole_FantasyRoleSupport   FantasyRole = 2
	FantasyRole_FantasyRoleOfflane   FantasyRole = 3
	FantasyRole_FantasyRoleMid       FantasyRole = 4
)

var FantasyRole_name = map[int32]string{
	0: "FantasyRoleUndefined",
	1: "FantasyRoleCore",
	2: "FantasyRoleSupport",
	3: "FantasyRoleOfflane",
	4: "FantasyRoleMid",
}

var FantasyRole_value = map[string]int32{
	"FantasyRoleUndefined": 0,
	"FantasyRoleCore":      1,
	"FantasyRoleSupport":   2,
	"FantasyRoleOfflane":   3,
	"FantasyRoleMid":       4,
}

func (x FantasyRole) String() string {
	return proto.EnumName(FantasyRole_name, int32(x))
}

func (FantasyRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{5}
}

type LaneType int32

const (
	LaneType_LaneTypeUnknown LaneType = 0
	LaneType_LaneTypeSafe    LaneType = 1
	LaneType_LaneTypeOff     LaneType = 2
	LaneType_LaneTypeMid     LaneType = 3
	LaneType_LaneTypeJungle  LaneType = 4
	LaneType_LaneTypeRoam    LaneType = 5
)

var LaneType_name = map[int32]string{
	0: "LaneTypeUnknown",
	1: "LaneTypeSafe",
	2: "LaneTypeOff",
	3: "LaneTypeMid",
	4: "LaneTypeJungle",
	5: "LaneTypeRoam",
}

var LaneType_value = map[string]int32{
	"LaneTypeUnknown": 0,
	"LaneTypeSafe":    1,
	"LaneTypeOff":     2,
	"LaneTypeMid":     3,
	"LaneTypeJungle":  4,
	"LaneTypeRoam":    5,
}

func (x LaneType) String() string {
	return proto.EnumName(LaneType_name, int32(x))
}

func (LaneType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{6}
}

type MatchOutcome int32

const (
	MatchOutcome_MatchOutcomeUnknown                        MatchOutcome = 0
	MatchOutcome_MatchOutcomeRadVictory                     MatchOutcome = 2
	MatchOutcome_MatchOutcomeDireVictory                    MatchOutcome = 3
	MatchOutcome_MatchOutcomeNotScoredPoorNetworkConditions MatchOutcome = 64
	MatchOutcome_MatchOutcomeNotScoredLeaver                MatchOutcome = 65
	MatchOutcome_MatchOutcomeNotScoredServerCrash           MatchOutcome = 66
	MatchOutcome_MatchOutcomeNotScoredNeverStarted          MatchOutcome = 67
	MatchOutcome_MatchOutcomeNotScoredCanceled              MatchOutcome = 68
)

var MatchOutcome_name = map[int32]string{
	0:  "MatchOutcomeUnknown",
	2:  "MatchOutcomeRadVictory",
	3:  "MatchOutcomeDireVictory",
	64: "MatchOutcomeNotScoredPoorNetworkConditions",
	65: "MatchOutcomeNotScoredLeaver",
	66: "MatchOutcomeNotScoredServerCrash",
	67: "MatchOutcomeNotScoredNeverStarted",
	68: "MatchOutcomeNotScoredCanceled",
}

var MatchOutcome_value = map[string]int32{
	"MatchOutcomeUnknown":                        0,
	"MatchOutcomeRadVictory":                     2,
	"MatchOutcomeDireVictory":                    3,
	"MatchOutcomeNotScoredPoorNetworkConditions": 64,
	"MatchOutcomeNotScoredLeaver":                65,
	"MatchOutcomeNotScoredServerCrash":           66,
	"MatchOutcomeNotScoredNeverStarted":          67,
	"MatchOutcomeNotScoredCanceled":              68,
}

func (x MatchOutcome) String() string {
	return proto.EnumName(MatchOutcome_name, int32(x))
}

func (MatchOutcome) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{7}
}

func init() {
	proto.RegisterEnum("protocol.LobbyType", LobbyType_name, LobbyType_value)
	proto.RegisterEnum("protocol.GameMode", GameMode_name, GameMode_value)
	proto.RegisterEnum("protocol.GameState", GameState_name, GameState_value)
	proto.RegisterEnum("protocol.GameTeam", GameTeam_name, GameTeam_value)
	proto.RegisterEnum("protocol.BuildingType", BuildingType_name, BuildingType_value)
	proto.RegisterEnum("protocol.FantasyRole", FantasyRole_name, FantasyRole_value)
	proto.RegisterEnum("protocol.LaneType", LaneType_name, LaneType_value)
	proto.RegisterEnum("protocol.MatchOutcome", MatchOutcome_name, MatchOutcome_value)
}

func init() { proto.RegisterFile("enums.proto", fileDescriptor_888b6bd9597961ff) }

var fileDescriptor_888b6bd9597961ff = []byte{
	// 964 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x56, 0x4b, 0x53, 0xe3, 0x46,
	0x10, 0x36, 0xe2, 0x65, 0xb7, 0x0d, 0x34, 0xc3, 0x7b, 0x37, 0x5b, 0xc9, 0x56, 0x25, 0x17, 0x1f,
	0xb6, 0x8a, 0x6c, 0x5e, 0xc7, 0x60, 0x3b, 0x2c, 0xa4, 0x6c, 0x70, 0x2c, 0xef, 0xb2, 0xb7, 0xd4,
	0x20, 0xb5, 0x8d, 0x0a, 0x79, 0xda, 0x35, 0x1a, 0x41, 0xe9, 0x96, 0x1f, 0x92, 0x4b, 0x7e, 0x49,
	0x6e, 0xf9, 0x47, 0xb9, 0x6f, 0x8d, 0x84, 0xc4, 0x80, 0x39, 0x31, 0xdf, 0xf7, 0xf5, 0x53, 0xd3,
	0x3d, 0x18, 0x9a, 0xa4, 0xd2, 0x59, 0xf2, 0x6e, 0xae, 0xd9, 0xb0, 0xa8, 0xe7, 0x7f, 0x02, 0x8e,
	0xdb, 0xff, 0x7a, 0xd0, 0xe8, 0xf3, 0xf5, 0x75, 0x36, 0xce, 0xe6, 0x24, 0x0e, 0x61, 0xb7, 0x02,
	0x5d, 0x99, 0xa4, 0x32, 0x1e, 0x48, 0x13, 0xdc, 0x60, 0x4d, 0xec, 0xc1, 0x76, 0xa5, 0x0c, 0xb5,
	0x0c, 0x4c, 0x14, 0x10, 0x2e, 0x89, 0x23, 0xd8, 0x7b, 0x74, 0x60, 0x9e, 0x77, 0xd8, 0x14, 0x1e,
	0x2b, 0xe2, 0x2b, 0x38, 0xac, 0xa4, 0x3e, 0x4d, 0x65, 0x90, 0x8d, 0x49, 0xce, 0x0a, 0x75, 0x55,
	0xbc, 0x85, 0x37, 0xcf, 0x54, 0x9f, 0x63, 0xfe, 0x23, 0xa5, 0x94, 0x0a, 0x93, 0x35, 0xf1, 0x06,
	0x8e, 0x9c, 0xd8, 0xb3, 0x39, 0x99, 0xc8, 0x44, 0x77, 0x0f, 0xf2, 0xfa, 0x93, 0xf8, 0x45, 0xad,
	0x7f, 0x1e, 0x7f, 0x3a, 0x2e, 0xd4, 0xba, 0x78, 0x0d, 0x07, 0x95, 0x7a, 0x45, 0x74, 0x4b, 0x2a,
	0x1c, 0x73, 0xaa, 0x15, 0x65, 0xd8, 0x10, 0xaf, 0x60, 0xff, 0x31, 0x39, 0x07, 0x32, 0xae, 0xca,
	0x06, 0xb1, 0x0f, 0xa2, 0xd2, 0xfc, 0x39, 0x05, 0x46, 0x1a, 0xd6, 0xd8, 0x14, 0x07, 0xb0, 0x53,
	0xf1, 0xbf, 0xdd, 0x91, 0x7a, 0x70, 0x68, 0xb5, 0xff, 0x5f, 0x86, 0xfa, 0x07, 0x39, 0xa3, 0x01,
	0x87, 0x24, 0x10, 0x5a, 0xe5, 0xf9, 0x82, 0x15, 0x61, 0x4d, 0x6c, 0x02, 0x94, 0xcc, 0xc9, 0x10,
	0x97, 0x5c, 0xdc, 0x1d, 0xa0, 0xe7, 0xe2, 0x51, 0x0f, 0x97, 0x5d, 0xec, 0xf7, 0x70, 0xe5, 0x89,
	0xff, 0x08, 0x57, 0xc5, 0x36, 0x6c, 0x94, 0xf8, 0x5c, 0x19, 0xcd, 0xb8, 0xe6, 0x9a, 0x9c, 0x5d,
	0xe1, 0xba, 0xbd, 0xab, 0x2a, 0x24, 0xdd, 0x91, 0x4e, 0x6c, 0xa6, 0xba, 0x5b, 0xdb, 0xe7, 0x99,
	0x4c, 0xb0, 0x21, 0x76, 0x01, 0x4b, 0x66, 0x9c, 0x1a, 0xd6, 0x91, 0x8c, 0x11, 0xdc, 0x70, 0x83,
	0x4b, 0x6c, 0xba, 0xb8, 0x3f, 0xc4, 0x96, 0x5b, 0xc1, 0x90, 0x39, 0x3e, 0xc6, 0x0d, 0xd7, 0xe4,
	0xf4, 0x0c, 0x37, 0x85, 0x80, 0xcd, 0xaa, 0xc9, 0x34, 0x31, 0x3c, 0xc3, 0xad, 0x27, 0x8d, 0xf7,
	0x10, 0x5d, 0xdc, 0xe9, 0xe1, 0xb6, 0x9d, 0xbd, 0xaa, 0xd1, 0xeb, 0x28, 0x8e, 0x4c, 0xd6, 0xd3,
	0x72, 0x62, 0x50, 0xb8, 0x09, 0xf3, 0x2f, 0x8f, 0x3b, 0x6e, 0x2f, 0x27, 0xa3, 0xde, 0x00, 0x77,
	0xdd, 0x94, 0x76, 0x0c, 0xa2, 0x10, 0xf7, 0xdc, 0xfe, 0x4e, 0xe2, 0xb8, 0x08, 0xb7, 0xef, 0x86,
	0x1b, 0xa7, 0xfa, 0x9a, 0xf1, 0xc0, 0x35, 0x1c, 0xa4, 0x46, 0x9a, 0x88, 0x15, 0x1e, 0xda, 0x09,
	0xab, 0x2a, 0x66, 0x19, 0xdc, 0x50, 0xd2, 0xbd, 0x91, 0x71, 0x4c, 0x6a, 0x4a, 0x78, 0xd4, 0xfe,
	0xcf, 0x83, 0x86, 0x95, 0x7d, 0x23, 0x0d, 0x95, 0x41, 0x73, 0x70, 0xae, 0x22, 0x83, 0x35, 0x3b,
	0xe2, 0x15, 0x75, 0x25, 0x23, 0x73, 0xca, 0x7a, 0x18, 0xcb, 0x8c, 0x74, 0x32, 0xe6, 0x3e, 0xcb,
	0x10, 0x97, 0xec, 0x20, 0x56, 0x26, 0x67, 0xa4, 0xd9, 0xa7, 0x98, 0x82, 0x3c, 0xbb, 0x67, 0x57,
	0xab, 0xd2, 0x7c, 0xa3, 0xa5, 0xa1, 0x69, 0x36, 0x8e, 0x66, 0x84, 0xcb, 0x65, 0xb9, 0xb9, 0x34,
	0xd4, 0x64, 0xcf, 0xb8, 0x62, 0x47, 0xbe, 0x62, 0xed, 0xe1, 0x5c, 0x0d, 0x35, 0x4f, 0x35, 0x25,
	0x09, 0xae, 0x96, 0x33, 0x51, 0xb8, 0x70, 0x62, 0x72, 0x9f, 0x35, 0x3b, 0xd5, 0x15, 0xdd, 0x8b,
	0x92, 0x80, 0x95, 0xa2, 0xc0, 0xe0, 0xfa, 0x93, 0xec, 0x76, 0x6f, 0xfd, 0x1b, 0xbe, 0x0f, 0x64,
	0x42, 0x58, 0x2f, 0x3f, 0x4b, 0x2e, 0x15, 0xb7, 0x9b, 0x43, 0x32, 0xe9, 0x1c, 0x1b, 0x76, 0x6b,
	0x9f, 0x77, 0x3d, 0x90, 0xf3, 0x87, 0x8e, 0xe1, 0xc9, 0x77, 0xea, 0xcb, 0xc4, 0x60, 0xb3, 0xfd,
	0xb7, 0x57, 0x2c, 0x90, 0x4d, 0x23, 0x76, 0x60, 0xab, 0x3c, 0x7f, 0x54, 0xb7, 0x8a, 0xef, 0x15,
	0xd6, 0xca, 0x7e, 0x2d, 0xf9, 0x81, 0x39, 0x9c, 0xa6, 0x59, 0x82, 0x9e, 0x6b, 0xda, 0x91, 0x05,
	0xb9, 0xec, 0x9a, 0x5e, 0x50, 0x6a, 0xb4, 0x8c, 0x13, 0x5c, 0x29, 0x87, 0x23, 0x67, 0xd9, 0x90,
	0x9c, 0xe1, 0xaa, 0xeb, 0x5e, 0x74, 0x71, 0x8c, 0x6b, 0x8b, 0xe4, 0xf7, 0xb8, 0xbe, 0x48, 0xbe,
	0xc7, 0xfa, 0x22, 0xf9, 0x03, 0x36, 0x16, 0xc9, 0x1f, 0x11, 0x16, 0xc9, 0x9f, 0xb0, 0xb9, 0x48,
	0xfe, 0x8c, 0xad, 0x45, 0xf2, 0x17, 0xdc, 0x68, 0x7f, 0x86, 0x56, 0x27, 0x8d, 0xe2, 0x30, 0x52,
	0xd3, 0xfc, 0x8d, 0xde, 0x83, 0x6d, 0x17, 0x8f, 0xf9, 0x9e, 0x34, 0xd6, 0xec, 0xfa, 0xb8, 0x74,
	0x47, 0x6a, 0x2d, 0x83, 0xdb, 0x04, 0x97, 0xec, 0x1d, 0xbb, 0xca, 0x89, 0x0a, 0x22, 0xbb, 0x44,
	0x5e, 0xfb, 0xaf, 0x25, 0x68, 0x9e, 0x4a, 0x65, 0x64, 0x92, 0x8d, 0x38, 0xce, 0x5f, 0x7f, 0x07,
	0x7e, 0x54, 0x21, 0x4d, 0x22, 0x45, 0x21, 0xd6, 0x6c, 0x61, 0x8e, 0xd2, 0x65, 0x6d, 0xdf, 0xfe,
	0x7d, 0x10, 0x0e, 0xe9, 0xa7, 0xf3, 0x39, 0x6b, 0x83, 0xde, 0x33, 0xfe, 0x72, 0x32, 0x89, 0xa5,
	0xb2, 0x53, 0x2b, 0x60, 0xd3, 0xe1, 0xed, 0x86, 0xae, 0xb4, 0x33, 0xa8, 0xf7, 0xa5, 0xa2, 0xbc,
	0xb1, 0x1d, 0xd8, 0x2a, 0xcf, 0x8f, 0x57, 0x8f, 0xd0, 0x2a, 0x49, 0x5f, 0x4e, 0x6c, 0xda, 0x2d,
	0x68, 0x96, 0xcc, 0xe5, 0x64, 0x82, 0x9e, 0x4b, 0xd8, 0xa0, 0x79, 0xa2, 0x92, 0xf8, 0x3d, 0x55,
	0xd3, 0xd8, 0x2e, 0x87, 0x13, 0x67, 0xc4, 0xf6, 0xfe, 0xdb, 0xff, 0x78, 0xd0, 0xca, 0xdf, 0xf0,
	0xcb, 0xd4, 0x04, 0x3c, 0x23, 0xfb, 0x9d, 0x5c, 0xfc, 0x58, 0xc3, 0x2b, 0xd8, 0x77, 0x85, 0x91,
	0x0c, 0x3f, 0x45, 0x81, 0x61, 0x9d, 0xa1, 0x67, 0x97, 0xce, 0xd5, 0x7a, 0x91, 0xa6, 0x52, 0x5c,
	0x16, 0xef, 0xa0, 0xed, 0x8a, 0x17, 0x6c, 0xfc, 0x80, 0x35, 0x85, 0x43, 0x66, 0x7d, 0x41, 0xe6,
	0x9e, 0xf5, 0x6d, 0x97, 0x55, 0x18, 0xd9, 0x8d, 0x4f, 0xf0, 0x57, 0xf1, 0x35, 0xbc, 0x7e, 0xd1,
	0xbe, 0x4f, 0xf2, 0x8e, 0x34, 0x9e, 0x88, 0x6f, 0xe1, 0x9b, 0x17, 0x0d, 0x7c, 0xd2, 0x77, 0xa4,
	0xbb, 0x5a, 0x26, 0x37, 0xd8, 0x11, 0xdf, 0xc1, 0xdb, 0x17, 0xad, 0x2e, 0xec, 0x3f, 0x03, 0xdf,
	0x48, 0x6d, 0x28, 0xc4, 0xae, 0x7d, 0x9f, 0x5e, 0x34, 0xeb, 0x4a, 0x15, 0x50, 0x4c, 0x21, 0xf6,
	0xae, 0xd7, 0xf2, 0xdf, 0x09, 0xef, 0xbf, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x66, 0x8c, 0x2b,
	0x3d, 0x08, 0x00, 0x00,
}
