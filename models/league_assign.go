// Code generated by modelgen. DO NOT EDIT.

package models

import (
	nssql "github.com/13k/night-stalker/internal/sql"
)

// Assign assigns fields from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *League) Assign(other *League) (dirty bool) {
	if other == nil {
		return false
	}

	if m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if m.Name != other.Name {
		m.Name = other.Name
		dirty = true
	}

	if m.Tier != other.Tier {
		m.Tier = other.Tier
		dirty = true
	}

	if m.Region != other.Region {
		m.Region = other.Region
		dirty = true
	}

	if m.Status != other.Status {
		m.Status = other.Status
		dirty = true
	}

	if m.TotalPrizePool != other.TotalPrizePool {
		m.TotalPrizePool = other.TotalPrizePool
		dirty = true
	}

	if !nssql.NullTimeEqual(m.LastActivityAt, other.LastActivityAt) {
		m.LastActivityAt = other.LastActivityAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.StartAt, other.StartAt) {
		m.StartAt = other.StartAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.FinishAt, other.FinishAt) {
		m.FinishAt = other.FinishAt
		dirty = true
	}

	if !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}

// AssignPartial assigns fields with non-zero values from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *League) AssignPartial(other *League) (dirty bool) {
	if other == nil {
		return false
	}

	if other.ID != 0 && m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if other.Name != "" && m.Name != other.Name {
		m.Name = other.Name
		dirty = true
	}

	if other.Tier != 0 && m.Tier != other.Tier {
		m.Tier = other.Tier
		dirty = true
	}

	if other.Region != 0 && m.Region != other.Region {
		m.Region = other.Region
		dirty = true
	}

	if other.Status != 0 && m.Status != other.Status {
		m.Status = other.Status
		dirty = true
	}

	if other.TotalPrizePool != 0 && m.TotalPrizePool != other.TotalPrizePool {
		m.TotalPrizePool = other.TotalPrizePool
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.LastActivityAt) && !nssql.NullTimeEqual(m.LastActivityAt, other.LastActivityAt) {
		m.LastActivityAt = other.LastActivityAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.StartAt) && !nssql.NullTimeEqual(m.StartAt, other.StartAt) {
		m.StartAt = other.StartAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.FinishAt) && !nssql.NullTimeEqual(m.FinishAt, other.FinishAt) {
		m.FinishAt = other.FinishAt
		dirty = true
	}

	if !other.CreatedAt.IsZero() && !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !other.UpdatedAt.IsZero() && !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.DeletedAt) && !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}
