// Code generated by modelgen. DO NOT EDIT.

package models

import (
	nssql "github.com/13k/night-stalker/internal/sql"
)

// Assign assigns fields from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *PlayerProfileCard) Assign(other *PlayerProfileCard) (dirty bool) {
	if other == nil {
		return false
	}

	if m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if m.AccountID != other.AccountID {
		m.AccountID = other.AccountID
		dirty = true
	}

	if m.BadgePoints != other.BadgePoints {
		m.BadgePoints = other.BadgePoints
		dirty = true
	}

	if m.LeaderboardRank != other.LeaderboardRank {
		m.LeaderboardRank = other.LeaderboardRank
		dirty = true
	}

	if m.RankTier != other.RankTier {
		m.RankTier = other.RankTier
		dirty = true
	}

	if m.RankTierScore != other.RankTierScore {
		m.RankTierScore = other.RankTierScore
		dirty = true
	}

	if m.RankTierMMRType != other.RankTierMMRType {
		m.RankTierMMRType = other.RankTierMMRType
		dirty = true
	}

	if m.PreviousRankTier != other.PreviousRankTier {
		m.PreviousRankTier = other.PreviousRankTier
		dirty = true
	}

	if m.IsPlusSubscriber != other.IsPlusSubscriber {
		m.IsPlusSubscriber = other.IsPlusSubscriber
		dirty = true
	}

	if !nssql.NullTimeEqual(m.PlusStartAt, other.PlusStartAt) {
		m.PlusStartAt = other.PlusStartAt
		dirty = true
	}

	if m.EventID != other.EventID {
		m.EventID = other.EventID
		dirty = true
	}

	if m.EventPoints != other.EventPoints {
		m.EventPoints = other.EventPoints
		dirty = true
	}

	if !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}

// AssignPartial assigns fields with non-zero values from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *PlayerProfileCard) AssignPartial(other *PlayerProfileCard) (dirty bool) {
	if other == nil {
		return false
	}

	if other.ID != 0 && m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if other.AccountID != 0 && m.AccountID != other.AccountID {
		m.AccountID = other.AccountID
		dirty = true
	}

	if other.BadgePoints != 0 && m.BadgePoints != other.BadgePoints {
		m.BadgePoints = other.BadgePoints
		dirty = true
	}

	if other.LeaderboardRank != 0 && m.LeaderboardRank != other.LeaderboardRank {
		m.LeaderboardRank = other.LeaderboardRank
		dirty = true
	}

	if other.RankTier != 0 && m.RankTier != other.RankTier {
		m.RankTier = other.RankTier
		dirty = true
	}

	if other.RankTierScore != 0 && m.RankTierScore != other.RankTierScore {
		m.RankTierScore = other.RankTierScore
		dirty = true
	}

	if other.RankTierMMRType != 0 && m.RankTierMMRType != other.RankTierMMRType {
		m.RankTierMMRType = other.RankTierMMRType
		dirty = true
	}

	if other.PreviousRankTier != 0 && m.PreviousRankTier != other.PreviousRankTier {
		m.PreviousRankTier = other.PreviousRankTier
		dirty = true
	}

	if other.IsPlusSubscriber && m.IsPlusSubscriber != other.IsPlusSubscriber {
		m.IsPlusSubscriber = other.IsPlusSubscriber
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.PlusStartAt) && !nssql.NullTimeEqual(m.PlusStartAt, other.PlusStartAt) {
		m.PlusStartAt = other.PlusStartAt
		dirty = true
	}

	if other.EventID != 0 && m.EventID != other.EventID {
		m.EventID = other.EventID
		dirty = true
	}

	if other.EventPoints != 0 && m.EventPoints != other.EventPoints {
		m.EventPoints = other.EventPoints
		dirty = true
	}

	if !other.CreatedAt.IsZero() && !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !other.UpdatedAt.IsZero() && !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.DeletedAt) && !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}
