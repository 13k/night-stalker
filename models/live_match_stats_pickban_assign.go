// Code generated by modelgen. DO NOT EDIT.

package models

import (
	nssql "github.com/13k/night-stalker/internal/sql"
)

// Assign assigns fields from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *LiveMatchStatsPickBan) Assign(other *LiveMatchStatsPickBan) (dirty bool) {
	if other == nil {
		return false
	}

	if m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if m.GameTeam != other.GameTeam {
		m.GameTeam = other.GameTeam
		dirty = true
	}

	if m.IsBan != other.IsBan {
		m.IsBan = other.IsBan
		dirty = true
	}

	if m.LiveMatchStatsID != other.LiveMatchStatsID {
		m.LiveMatchStatsID = other.LiveMatchStatsID
		dirty = true
	}

	if m.HeroID != other.HeroID {
		m.HeroID = other.HeroID
		dirty = true
	}

	if !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}

// AssignPartial assigns fields with non-zero values from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *LiveMatchStatsPickBan) AssignPartial(other *LiveMatchStatsPickBan) (dirty bool) {
	if other == nil {
		return false
	}

	if other.ID != 0 && m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if other.GameTeam != 0 && m.GameTeam != other.GameTeam {
		m.GameTeam = other.GameTeam
		dirty = true
	}

	if other.IsBan && m.IsBan != other.IsBan {
		m.IsBan = other.IsBan
		dirty = true
	}

	if other.LiveMatchStatsID != 0 && m.LiveMatchStatsID != other.LiveMatchStatsID {
		m.LiveMatchStatsID = other.LiveMatchStatsID
		dirty = true
	}

	if other.HeroID != 0 && m.HeroID != other.HeroID {
		m.HeroID = other.HeroID
		dirty = true
	}

	if !other.CreatedAt.IsZero() && !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !other.UpdatedAt.IsZero() && !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.DeletedAt) && !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}
