// Code generated by modelgen. DO NOT EDIT.

package models

import (
	nssql "github.com/13k/night-stalker/internal/sql"
)

// Assign assigns fields from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *ProPlayer) Assign(other *ProPlayer) (dirty bool) {
	if other == nil {
		return false
	}

	if m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if m.AccountID != other.AccountID {
		m.AccountID = other.AccountID
		dirty = true
	}

	if m.IsLocked != other.IsLocked {
		m.IsLocked = other.IsLocked
		dirty = true
	}

	if !nssql.NullTimeEqual(m.LockedUntil, other.LockedUntil) {
		m.LockedUntil = other.LockedUntil
		dirty = true
	}

	if m.FantasyRole != other.FantasyRole {
		m.FantasyRole = other.FantasyRole
		dirty = true
	}

	if m.TeamID != other.TeamID {
		m.TeamID = other.TeamID
		dirty = true
	}

	if !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}

// AssignPartial assigns fields with non-zero values from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *ProPlayer) AssignPartial(other *ProPlayer) (dirty bool) {
	if other == nil {
		return false
	}

	if other.ID != 0 && m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if other.AccountID != 0 && m.AccountID != other.AccountID {
		m.AccountID = other.AccountID
		dirty = true
	}

	if other.IsLocked && m.IsLocked != other.IsLocked {
		m.IsLocked = other.IsLocked
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.LockedUntil) && !nssql.NullTimeEqual(m.LockedUntil, other.LockedUntil) {
		m.LockedUntil = other.LockedUntil
		dirty = true
	}

	if other.FantasyRole != 0 && m.FantasyRole != other.FantasyRole {
		m.FantasyRole = other.FantasyRole
		dirty = true
	}

	if other.TeamID != 0 && m.TeamID != other.TeamID {
		m.TeamID = other.TeamID
		dirty = true
	}

	if !other.CreatedAt.IsZero() && !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !other.UpdatedAt.IsZero() && !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.DeletedAt) && !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}
