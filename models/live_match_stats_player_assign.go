// Code generated by modelgen. DO NOT EDIT.

package models

import (
	nssql "github.com/13k/night-stalker/internal/sql"
)

// Assign assigns fields from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *LiveMatchStatsPlayer) Assign(other *LiveMatchStatsPlayer) (dirty bool) {
	if other == nil {
		return false
	}

	if m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if m.AccountID != other.AccountID {
		m.AccountID = other.AccountID
		dirty = true
	}

	if m.PlayerSlot != other.PlayerSlot {
		m.PlayerSlot = other.PlayerSlot
		dirty = true
	}

	if m.Name != other.Name {
		m.Name = other.Name
		dirty = true
	}

	if m.GameTeam != other.GameTeam {
		m.GameTeam = other.GameTeam
		dirty = true
	}

	if m.Level != other.Level {
		m.Level = other.Level
		dirty = true
	}

	if m.Kills != other.Kills {
		m.Kills = other.Kills
		dirty = true
	}

	if m.Deaths != other.Deaths {
		m.Deaths = other.Deaths
		dirty = true
	}

	if m.Assists != other.Assists {
		m.Assists = other.Assists
		dirty = true
	}

	if m.Denies != other.Denies {
		m.Denies = other.Denies
		dirty = true
	}

	if m.LastHits != other.LastHits {
		m.LastHits = other.LastHits
		dirty = true
	}

	if m.Gold != other.Gold {
		m.Gold = other.Gold
		dirty = true
	}

	if m.NetWorth != other.NetWorth {
		m.NetWorth = other.NetWorth
		dirty = true
	}

	if m.PosX != other.PosX {
		m.PosX = other.PosX
		dirty = true
	}

	if m.PosY != other.PosY {
		m.PosY = other.PosY
		dirty = true
	}

	if !nssql.IntArrayEqual(m.Abilities, other.Abilities) {
		m.Abilities = other.Abilities
		dirty = true
	}

	if !nssql.IntArrayEqual(m.Items, other.Items) {
		m.Items = other.Items
		dirty = true
	}

	if m.LiveMatchStatsID != other.LiveMatchStatsID {
		m.LiveMatchStatsID = other.LiveMatchStatsID
		dirty = true
	}

	if m.MatchID != other.MatchID {
		m.MatchID = other.MatchID
		dirty = true
	}

	if m.HeroID != other.HeroID {
		m.HeroID = other.HeroID
		dirty = true
	}

	if !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}

// AssignPartial assigns fields with non-zero values from "other" into the receiver.
// It returns true if any changes were made to the receiver.
func (m *LiveMatchStatsPlayer) AssignPartial(other *LiveMatchStatsPlayer) (dirty bool) {
	if other == nil {
		return false
	}

	if other.ID != 0 && m.ID != other.ID {
		m.ID = other.ID
		dirty = true
	}

	if other.AccountID != 0 && m.AccountID != other.AccountID {
		m.AccountID = other.AccountID
		dirty = true
	}

	if other.PlayerSlot != 0 && m.PlayerSlot != other.PlayerSlot {
		m.PlayerSlot = other.PlayerSlot
		dirty = true
	}

	if other.Name != "" && m.Name != other.Name {
		m.Name = other.Name
		dirty = true
	}

	if other.GameTeam != 0 && m.GameTeam != other.GameTeam {
		m.GameTeam = other.GameTeam
		dirty = true
	}

	if other.Level != 0 && m.Level != other.Level {
		m.Level = other.Level
		dirty = true
	}

	if other.Kills != 0 && m.Kills != other.Kills {
		m.Kills = other.Kills
		dirty = true
	}

	if other.Deaths != 0 && m.Deaths != other.Deaths {
		m.Deaths = other.Deaths
		dirty = true
	}

	if other.Assists != 0 && m.Assists != other.Assists {
		m.Assists = other.Assists
		dirty = true
	}

	if other.Denies != 0 && m.Denies != other.Denies {
		m.Denies = other.Denies
		dirty = true
	}

	if other.LastHits != 0 && m.LastHits != other.LastHits {
		m.LastHits = other.LastHits
		dirty = true
	}

	if other.Gold != 0 && m.Gold != other.Gold {
		m.Gold = other.Gold
		dirty = true
	}

	if other.NetWorth != 0 && m.NetWorth != other.NetWorth {
		m.NetWorth = other.NetWorth
		dirty = true
	}

	if other.PosX != 0 && m.PosX != other.PosX {
		m.PosX = other.PosX
		dirty = true
	}

	if other.PosY != 0 && m.PosY != other.PosY {
		m.PosY = other.PosY
		dirty = true
	}

	if other.Abilities != nil && !nssql.IntArrayEqual(m.Abilities, other.Abilities) {
		m.Abilities = other.Abilities
		dirty = true
	}

	if other.Items != nil && !nssql.IntArrayEqual(m.Items, other.Items) {
		m.Items = other.Items
		dirty = true
	}

	if other.LiveMatchStatsID != 0 && m.LiveMatchStatsID != other.LiveMatchStatsID {
		m.LiveMatchStatsID = other.LiveMatchStatsID
		dirty = true
	}

	if other.MatchID != 0 && m.MatchID != other.MatchID {
		m.MatchID = other.MatchID
		dirty = true
	}

	if other.HeroID != 0 && m.HeroID != other.HeroID {
		m.HeroID = other.HeroID
		dirty = true
	}

	if !other.CreatedAt.IsZero() && !m.CreatedAt.Equal(other.CreatedAt) {
		m.CreatedAt = other.CreatedAt
		dirty = true
	}

	if !other.UpdatedAt.IsZero() && !m.UpdatedAt.Equal(other.UpdatedAt) {
		m.UpdatedAt = other.UpdatedAt
		dirty = true
	}

	if !nssql.NullTimeIsZero(other.DeletedAt) && !nssql.NullTimeEqual(m.DeletedAt, other.DeletedAt) {
		m.DeletedAt = other.DeletedAt
		dirty = true
	}

	return
}
